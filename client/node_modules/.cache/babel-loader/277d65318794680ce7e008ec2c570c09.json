{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createStaticVNode as _createStaticVNode } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"home mt-3\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \" My Activity List\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  class: \"container mt-3\",\n  style: {\n    \"align\": \"center\"\n  }\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"card\\\"><div class=\\\"row\\\"><div class=\\\"col\\\"><h3>Title</h3></div><div class=\\\"col\\\"><h3>Time</h3></div><div class=\\\"col\\\"><h3>Remaining Quota</h3></div><div class=\\\"col\\\"><h3>Stauts</h3></div></div></div>\", 1);\n\nconst _hoisted_4 = {\n  key: \"\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_activity_list_card = _resolveComponent(\"activity-list-card\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Title of rows \"), _hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.ACTIVITY_DATA, activity => {\n    return _openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_activity_list_card, {\n      state: \"INACTIVE\"\n    })]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":";;gCAEEA,oBAEM,KAFN,EAEM;AAFDC,OAAK,EAAC;AAEL,CAFN,EAAsB,cACpBD,oBAA0B,IAA1B,EAA0B,IAA1B,EAAI,mBAAJ,CADoB,CAAtB;;AAAA;;;AAGKC,OAAK,EAAC;AAAiBC,OAAsB,EAAtB;AAAA;AAAA;;;;;;AAmBcC,KAAG,EAAJ;;;;;uBAvB3CC,oBA4BM,KA5BN,EA4BM,IA5BN,EA4BM,CA3BJC,UA2BI,EAxBJL,oBAuBM,KAvBN,cAuBM,CAtBJM,sCAsBI,EArBJC,UAqBI,qBAJJH,oBAEMI,SAFN,EAEM,IAFN,EAEMC,YAFkBC,mBAElB,EAFMC,QAAyB,IAAjB;yBAApBP,oBAEM,KAFN,cAEM,CADJQ,aAA0DC,6BAA1D,EAA0D;AAAtCC,WAAK,EAAC;AAAgC,KAA1D,CACI,CAFN;GAEM,CAFN;;AAAA,GAII,EAvBN,CAwBI,CA5BN","names":["_createElementVNode","class","style","key","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_3","_Fragment","_renderList","$data","activity","_createVNode","_component_activity_list_card","state"],"sourceRoot":"","sources":["D:\\MySQL\\pickup\\client\\src\\views\\ActivityListView.vue"],"sourcesContent":["<template>\n<div>\n  <div class=\"home mt-3\">\n    <h1> My Activity List</h1>\n  </div>\n  <div class=\"container mt-3\" style=\"align: center;\">\n    <!-- Title of rows -->\n    <div class=\"card\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <h3>Title</h3>\n        </div>\n        <div class=\"col\">\n          <h3>Time</h3>\n        </div>\n        <div class=\"col\">\n          <h3>Remaining Quota</h3>\n        </div>\n        <div class=\"col\">\n          <h3>Stauts</h3>\n        </div>\n      </div>\n    </div>\n\n    <div v-for=\"activity in ACTIVITY_DATA\" :key=\"\">\n      <activity-list-card state=\"INACTIVE\"></activity-list-card>\n    </div>\n\n  </div>\n</div>\n</template>\n\n<script>\nimport ActivityListCard from '../components/ActivityList/ActivityListCard.vue';\n\nconst axios = require('axios').default;\n\nconst ACTIVITY_INFO_URL = 'http://localhost:4000/getActivityInfo';\n\nexport default {\n  components: { 'activity-list-card': ActivityListCard },\n  data() {\n    return {\n      user_id: 8,\n      ACTIVITY_ID_LIST: null, // The list of activity id of a user\n      ACTIVITY_DATA: null, // Stores all the activity information of a user\n      title: null,\n      time: null,\n      quota_left: null,\n      state: null,\n      action: null,\n    };\n  },\n  methods: {\n    /**\n     * @description\n     * Loads all the activity information of a user with given user_id\n     * Data is loaded into the local variable ACTIVITY_ID_LIST & ACTIVITY_DATA\n     * @var ID_LIST_INDEX @var DATA_INDEX\n     * Data package is sent in the form: {[ACTIVITY_ID_LIST],[ACTIVITY_DATA]}\n     * @param {*} callback\n     * This callback function is used to pass data from async function\n     */\n    loadActivityRecord(callback) {\n      axios.post(ACTIVITY_INFO_URL, { user_id: this.user_id })\n        .then((response) => {\n          const ID_LIST_INDEX = 0;\n          const DATA_INDEX = 1;\n          this.ACTIVITY_DATA = response.data[DATA_INDEX];\n          this.ACTIVITY_ID_LIST = response.data[ID_LIST_INDEX];\n          return callback();\n        });\n    },\n    /**\n     * @description\n     * Render a specific activity card\n     * @param {*} index\n     */\n    renderActivityCard(index) {\n      this.title = this.ACTIVITY_DATA[index].title;\n      this.time = this.ACTIVITY_DATA[index].time;\n      this.quota_left = this.ACTIVITY_DATA[index].quota_left;\n      this.state = 'ACTIVE';\n      if (this.state === 'ACTIVE') {\n        this.action = 'Deactivate';\n      } else {\n        this.action = 'Activate';\n      }\n    },\n    renderPage() {\n      const self = this;\n      const myPromise1 = function () {\n        return new Promise((resolve) => {\n          self.loadActivityRecord(() => {\n            resolve();\n          });\n        });\n      };\n      myPromise1()\n        .then(() => {\n          self.renderActivityCard(0);\n        });\n    },\n  },\n  mounted() {\n    this.renderPage();\n  },\n};\n</script>\n\n<style>\n.save_button {\n  min-width: 110px;\n  max-width: 110px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}