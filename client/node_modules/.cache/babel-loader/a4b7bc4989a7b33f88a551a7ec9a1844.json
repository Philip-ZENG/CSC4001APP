{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Admin Console\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_user_list = _resolveComponent(\"user-list\");\n\n  return _openBlock(), _createElementBlock(\"section\", null, [_hoisted_1, _createVNode(_component_user_list), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.logout && $options.logout(...args))\n  }, \"Logout\")]);\n}","map":{"version":3,"mappings":";;gCAEIA,oBAAsB,IAAtB,EAAsB,IAAtB,EAAI,eAAJ,EAAiB;AAAA;AAAjB;;;;;uBADFC,oBAIU,SAJV,EAIU,IAJV,EAIU,CAHRC,UAGQ,EAFRC,aAAuBC,oBAAvB,CAEQ,EADRJ,oBAAuC,QAAvC,EAAuC;AAA9BK,WAAK,yCAAEC,2CAAF;AAAyB,GAAvC,EAAwB,QAAxB,CACQ,CAJV","names":["_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_user_list","onClick","$options"],"sourceRoot":"","sources":["D:\\MySQL\\pickup\\client\\src\\views\\AdminConsoleView.vue"],"sourcesContent":["<template>\r\n  <section>\r\n    <h1>Admin Console</h1>\r\n    <user-list></user-list>\r\n    <button @click=\"logout\">Logout</button>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport UserList from '../components/AdminConsole/UserList.vue';\r\n\r\nconst axios = require('axios').default;\r\n\r\nconst USER_INFO_URL = 'http://localhost:4000/getUserInfo';\r\n\r\nexport default {\r\n  components: {\r\n    'user-list': UserList,\r\n  },\r\n  data() {\r\n    return {\r\n      USER_DATA: [],\r\n    };\r\n  },\r\n  provide() {\r\n    return {\r\n      userData: this.USER_DATA,\r\n    };\r\n  },\r\n  methods: {\r\n    logout() {\r\n      this.$store.dispatch('setIsLogOut');\r\n      this.$store.dispatch('setIsUser', { isUser: null });\r\n      this.$router.push('/');\r\n    },\r\n    /**\r\n     * @description\r\n     * Load all the user data from database, data is stored in\r\n     */\r\n    loadUserData() {\r\n      axios\r\n        .get(USER_INFO_URL)\r\n        .then((response) => {\r\n          console.log(response);\r\n          for (let i = 0; i < response.data.length; i += 1) {\r\n            this.USER_DATA.push(response.data[i]);\r\n          }\r\n          console.log(this.USER_DATA);\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.loadUserData();\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}