{"ast":null,"code":"import managementConsole from '../components/ActivityManagement/ManagementConsole.vue';\n\nconst axios = require('axios').default;\n\nconst ACTIVITY_INFO_URL = 'http://localhost:4000/getActivityInfo';\nconst USER_ROLE = 'http://localhost:4000/getUserRole';\nconst DELETE_MEMBER = 'http://localhost:4000/quitActivity';\nconst CHANGE_MANAGER = 'http://localhost:4000/changeManager';\nconst TERMINATE_ACTIVITY = 'http://localhost:4000/terminateActivity';\nexport default {\n  components: {\n    'management-console': managementConsole\n  },\n\n  data() {\n    return {\n      activity_id: null,\n      // Use array here because if set to null, the data cannot be pass through\n      user_id: [],\n      user_role: [],\n      ACTIVITY_INFO: [],\n      MEMBER_ID: [],\n      MEMBER_INFO: []\n    };\n  },\n\n  provide() {\n    return {\n      userId: this.user_id,\n      userRole: this.user_role,\n      activityInfo: this.ACTIVITY_INFO,\n      deleteMember: this.deleteMember,\n      memberId: this.memberId,\n      memberInfo: this.memberInfo\n    };\n  },\n\n  methods: {\n    /**\n     * @description\n     * Return activity info of a specific activity with the provided activity_id\n     */\n    getActivityInfo() {\n      axios.post(ACTIVITY_INFO_URL, {\n        activity_id: this.activity_id\n      }).then(response => {\n        this.ACTIVITY_INFO.push(response.data);\n      });\n    },\n\n    /**\n     * @description\n     * Return the role of a user with the provided activity_id and user_id\n     */\n    getUserRole() {\n      axios.post(USER_ROLE, {\n        activity_id: this.activity_id,\n        user_id: this.user_id\n      }).then(response => {\n        this.user_role.push(response.data.role);\n      });\n    },\n\n    /**\n     * @description\n     * Quit from the activity with provided activity_id and user_id\n     */\n    deleteMember(userId) {\n      axios.post(DELETE_MEMBER, {\n        activity_id: this.activity_id,\n        user_id: userId\n      });\n    },\n\n    /**\n     * @description\n     * Transfer the authority of activity manager to other member with provided new_manager_id\n     */\n    changeManager(newManagerId) {\n      axios.post(CHANGE_MANAGER, {\n        activity_id: this.activity_id,\n        new_manager_id: newManagerId,\n        old_manager_id: this.userId\n      });\n    },\n\n    terminateActivity() {\n      axios.post(TERMINATE_ACTIVITY, {\n        activity_id: this.activity_id\n      });\n    }\n\n  },\n\n  mounted() {\n    this.getActivityInfo();\n    this.getUserRole();\n  },\n\n  created() {\n    // get the route parameter 'id' from router\n    this.activity_id = this.$route.params.activity_id;\n    this.user_id.push(this.$route.params.user_id);\n  }\n\n};","map":{"version":3,"mappings":"AAYA,OAAOA,iBAAP,MAA8B,wDAA9B;;AAEA,MAAMC,KAAI,GAAIC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEA,MAAMC,iBAAgB,GAAI,uCAA1B;AACA,MAAMC,SAAQ,GAAI,mCAAlB;AACA,MAAMC,aAAY,GAAI,oCAAtB;AACA,MAAMC,cAAa,GAAI,qCAAvB;AACA,MAAMC,kBAAiB,GAAI,yCAA3B;AAEA,eAAe;AACbC,YAAU,EAAE;AACV,0BAAsBT;AADZ,GADC;;AAIbU,MAAI,GAAG;AACL,WAAO;AACLC,iBAAW,EAAE,IADR;AAEL;AACAC,aAAO,EAAE,EAHJ;AAILC,eAAS,EAAE,EAJN;AAKLC,mBAAa,EAAE,EALV;AAMLC,eAAS,EAAE,EANN;AAOLC,iBAAW,EAAE;AAPR,KAAP;AASD,GAdY;;AAebC,SAAO,GAAG;AACR,WAAO;AACLC,YAAM,EAAE,KAAKN,OADR;AAELO,cAAQ,EAAE,KAAKN,SAFV;AAGLO,kBAAY,EAAE,KAAKN,aAHd;AAILO,kBAAY,EAAE,KAAKA,YAJd;AAKLC,cAAQ,EAAE,KAAKA,QALV;AAMLC,gBAAU,EAAE,KAAKA;AANZ,KAAP;AAQD,GAxBY;;AAyBbC,SAAO,EAAE;AACP;;;;AAIAC,mBAAe,GAAG;AAChBxB,WAAK,CAACyB,IAAN,CAAWtB,iBAAX,EAA8B;AAAEO,mBAAW,EAAE,KAAKA;AAApB,OAA9B,EAAiEgB,IAAjE,CAAuEC,QAAD,IAAc;AAClF,aAAKd,aAAL,CAAmBe,IAAnB,CAAwBD,QAAQ,CAAClB,IAAjC;AACD,OAFD;AAGD,KATM;;AAUP;;;;AAIAoB,eAAW,GAAG;AACZ7B,WAAI,CACDyB,IADH,CACQrB,SADR,EACmB;AAAEM,mBAAW,EAAE,KAAKA,WAApB;AAAiCC,eAAO,EAAE,KAAKA;AAA/C,OADnB,EAEGe,IAFH,CAESC,QAAD,IAAc;AAClB,aAAKf,SAAL,CAAegB,IAAf,CAAoBD,QAAQ,CAAClB,IAAT,CAAcqB,IAAlC;AACD,OAJH;AAKD,KApBM;;AAqBP;;;;AAIAV,gBAAY,CAACH,MAAD,EAAS;AACnBjB,WAAK,CAACyB,IAAN,CAAWpB,aAAX,EAA0B;AAAEK,mBAAW,EAAE,KAAKA,WAApB;AAAiCC,eAAO,EAAEM;AAA1C,OAA1B;AACD,KA3BM;;AA4BP;;;;AAIAc,iBAAa,CAACC,YAAD,EAAe;AAC1BhC,WAAK,CAACyB,IAAN,CAAWnB,cAAX,EAA2B;AACzBI,mBAAW,EAAE,KAAKA,WADO;AAEzBuB,sBAAc,EAAED,YAFS;AAGzBE,sBAAc,EAAE,KAAKjB;AAHI,OAA3B;AAKD,KAtCM;;AAuCPkB,qBAAiB,GAAE;AACjBnC,WAAK,CAACyB,IAAN,CAAWlB,kBAAX,EAA+B;AAC7BG,mBAAW,EAAE,KAAKA;AADW,OAA/B;AAGF;;AA3CO,GAzBI;;AAsEb0B,SAAO,GAAG;AACR,SAAKZ,eAAL;AACA,SAAKK,WAAL;AACD,GAzEY;;AA0EbQ,SAAO,GAAG;AACR;AACA,SAAK3B,WAAL,GAAmB,KAAK4B,MAAL,CAAYC,MAAZ,CAAmB7B,WAAtC;AACA,SAAKC,OAAL,CAAaiB,IAAb,CAAkB,KAAKU,MAAL,CAAYC,MAAZ,CAAmB5B,OAArC;AACD;;AA9EY,CAAf","names":["managementConsole","axios","require","default","ACTIVITY_INFO_URL","USER_ROLE","DELETE_MEMBER","CHANGE_MANAGER","TERMINATE_ACTIVITY","components","data","activity_id","user_id","user_role","ACTIVITY_INFO","MEMBER_ID","MEMBER_INFO","provide","userId","userRole","activityInfo","deleteMember","memberId","memberInfo","methods","getActivityInfo","post","then","response","push","getUserRole","role","changeManager","newManagerId","new_manager_id","old_manager_id","terminateActivity","mounted","created","$route","params"],"sourceRoot":"","sources":["D:\\MySQL\\pickup\\client\\src\\views\\ActivityManagementView.vue"],"sourcesContent":["<template>\n  <section>\n    <div class=\"home\">\n      <h1>This is the Activity Management page</h1>\n      <h2>The activity id is {{ activity_id }}</h2>\n      <h2>The user id is {{ user_id }}</h2>\n    </div>\n    <management-console></management-console>\n  </section>\n</template>\n\n<script>\nimport managementConsole from '../components/ActivityManagement/ManagementConsole.vue';\n\nconst axios = require('axios').default;\n\nconst ACTIVITY_INFO_URL = 'http://localhost:4000/getActivityInfo';\nconst USER_ROLE = 'http://localhost:4000/getUserRole';\nconst DELETE_MEMBER = 'http://localhost:4000/quitActivity';\nconst CHANGE_MANAGER = 'http://localhost:4000/changeManager';\nconst TERMINATE_ACTIVITY = 'http://localhost:4000/terminateActivity';\n\nexport default {\n  components: {\n    'management-console': managementConsole,\n  },\n  data() {\n    return {\n      activity_id: null,\n      // Use array here because if set to null, the data cannot be pass through\n      user_id: [],\n      user_role: [],\n      ACTIVITY_INFO: [],\n      MEMBER_ID: [],\n      MEMBER_INFO: [],\n    };\n  },\n  provide() {\n    return {\n      userId: this.user_id,\n      userRole: this.user_role,\n      activityInfo: this.ACTIVITY_INFO,\n      deleteMember: this.deleteMember,\n      memberId: this.memberId,\n      memberInfo: this.memberInfo,\n    };\n  },\n  methods: {\n    /**\n     * @description\n     * Return activity info of a specific activity with the provided activity_id\n     */\n    getActivityInfo() {\n      axios.post(ACTIVITY_INFO_URL, { activity_id: this.activity_id }).then((response) => {\n        this.ACTIVITY_INFO.push(response.data);\n      });\n    },\n    /**\n     * @description\n     * Return the role of a user with the provided activity_id and user_id\n     */\n    getUserRole() {\n      axios\n        .post(USER_ROLE, { activity_id: this.activity_id, user_id: this.user_id })\n        .then((response) => {\n          this.user_role.push(response.data.role);\n        });\n    },\n    /**\n     * @description\n     * Quit from the activity with provided activity_id and user_id\n     */\n    deleteMember(userId) {\n      axios.post(DELETE_MEMBER, { activity_id: this.activity_id, user_id: userId });\n    },\n    /**\n     * @description\n     * Transfer the authority of activity manager to other member with provided new_manager_id\n     */\n    changeManager(newManagerId) {\n      axios.post(CHANGE_MANAGER, {\n        activity_id: this.activity_id,\n        new_manager_id: newManagerId,\n        old_manager_id: this.userId,\n      });\n    },\n    terminateActivity(){\n      axios.post(TERMINATE_ACTIVITY, {\n        activity_id: this.activity_id\n      });\n    }\n  },\n  mounted() {\n    this.getActivityInfo();\n    this.getUserRole();\n  },\n  created() {\n    // get the route parameter 'id' from router\n    this.activity_id = this.$route.params.activity_id;\n    this.user_id.push(this.$route.params.user_id);\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}