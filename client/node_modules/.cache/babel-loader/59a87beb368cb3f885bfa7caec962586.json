{"ast":null,"code":"import ActivityList from '../components/ActivityList/ActivityList.vue';\nimport ActivityListTitle from '../components/ActivityList/ActivityListTitle.vue';\n\nconst axios = require('axios').default;\n\nconst ACTIVITY_INFO_URL = 'http://localhost:4000/getActivityList';\nexport default {\n  components: {\n    'activity-list-title': ActivityListTitle,\n    'activity-list': ActivityList\n  },\n\n  data() {\n    return {\n      user_id: null,\n      ACTIVITY_ID_LIST: [],\n      // The list of activity id of a user\n      ACTIVITY_DATA: [] // Stores all the activity information of a user\n\n    };\n  },\n\n  provide() {\n    return {\n      userId: this.user_id,\n      activityIdList: this.ACTIVITY_ID_LIST,\n      activityData: this.ACTIVITY_DATA\n    };\n  },\n\n  methods: {\n    /**\n     * @description\n     * Loads all the activity information of a user with given user_id\n     * Data is loaded into the local variable ACTIVITY_ID_LIST & ACTIVITY_DATA\n     * @var ID_LIST_INDEX @var DATA_INDEX\n     * Data package is sent in the form: {[ACTIVITY_ID_LIST],[ACTIVITY_DATA]}\n     * @param {*} callback\n     * This callback function is used to pass data from async function\n     */\n    loadActivityRecord(callback) {\n      axios.post(ACTIVITY_INFO_URL, {\n        user_id: this.user_id\n      }).then(response => {\n        const ID_LIST_INDEX = 0;\n        const DATA_INDEX = 1;\n\n        for (let i = 0; i < response.data[DATA_INDEX].length; i += 1) {\n          this.ACTIVITY_DATA.push(response.data[DATA_INDEX][i]);\n        }\n\n        for (let i = 0; i < response.data[ID_LIST_INDEX].length; i += 1) {\n          this.ACTIVITY_ID_LIST.push(response.data[ID_LIST_INDEX][i]);\n        }\n\n        this.ACTIVITY_ID_LIST = response.data[ID_LIST_INDEX];\n        return callback();\n      });\n    },\n\n    /**\n     * @description\n     * Call functions to load data into local memory\n     * TODO We need to load data into the local memory FIRST and then render the page\n     */\n    renderPage() {\n      const self = this;\n\n      const myPromise1 = function () {\n        return new Promise(resolve => {\n          self.loadActivityRecord(() => {\n            resolve();\n          });\n        });\n      };\n\n      myPromise1().then(() => {\n        console.log(this.ACTIVITY_ID_LIST);\n        console.log(this.ACTIVITY_DATA);\n      });\n    }\n\n  },\n\n  // lIFE Cycle mounted, will be executed after app setup\n  mounted() {\n    this.renderPage();\n  },\n\n  created() {\n    // get the route parameter 'id' from router\n    this.user_id = this.$route.params.user_id;\n    console.log(this.user_id);\n  }\n\n};","map":{"version":3,"mappings":"AAaA,OAAOA,YAAP,MAAyB,6CAAzB;AACA,OAAOC,iBAAP,MAA8B,kDAA9B;;AAEA,MAAMC,KAAI,GAAIC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEA,MAAMC,iBAAgB,GAAI,uCAA1B;AAEA,eAAe;AACbC,YAAU,EAAE;AACV,2BAAuBL,iBADb;AAEV,qBAAiBD;AAFP,GADC;;AAKbO,MAAI,GAAG;AACL,WAAO;AACLC,aAAO,EAAE,IADJ;AAELC,sBAAgB,EAAE,EAFb;AAEiB;AACtBC,mBAAa,EAAE,EAHV,CAGc;;AAHd,KAAP;AAKD,GAXY;;AAYbC,SAAO,GAAG;AACR,WAAO;AACLC,YAAM,EAAE,KAAKJ,OADR;AAELK,oBAAc,EAAE,KAAKJ,gBAFhB;AAGLK,kBAAY,EAAE,KAAKJ;AAHd,KAAP;AAKD,GAlBY;;AAmBbK,SAAO,EAAE;AACP;;;;;;;;;AASAC,sBAAkB,CAACC,QAAD,EAAW;AAC3Bf,WAAK,CAACgB,IAAN,CAAWb,iBAAX,EAA8B;AAAEG,eAAO,EAAE,KAAKA;AAAhB,OAA9B,EACGW,IADH,CACSC,QAAD,IAAc;AAClB,cAAMC,aAAY,GAAI,CAAtB;AACA,cAAMC,UAAS,GAAI,CAAnB;;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIH,QAAQ,CAACb,IAAT,CAAce,UAAd,EAA0BE,MAA9C,EAAsDD,KAAK,CAA3D,EAA8D;AAC5D,eAAKb,aAAL,CAAmBe,IAAnB,CAAwBL,QAAQ,CAACb,IAAT,CAAce,UAAd,EAA0BC,CAA1B,CAAxB;AACF;;AACA,aAAK,IAAIA,IAAI,CAAb,EAAgBA,IAAIH,QAAQ,CAACb,IAAT,CAAcc,aAAd,EAA6BG,MAAjD,EAAyDD,KAAK,CAA9D,EAAiE;AAC/D,eAAKd,gBAAL,CAAsBgB,IAAtB,CAA2BL,QAAQ,CAACb,IAAT,CAAcc,aAAd,EAA6BE,CAA7B,CAA3B;AACF;;AACA,aAAKd,gBAAL,GAAwBW,QAAQ,CAACb,IAAT,CAAcc,aAAd,CAAxB;AACA,eAAOJ,QAAQ,EAAf;AACD,OAZH;AAaD,KAxBM;;AAyBP;;;;;AAKAS,cAAU,GAAG;AACX,YAAMC,IAAG,GAAI,IAAb;;AACA,YAAMC,UAAS,GAAI,YAAY;AAC7B,eAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9BH,cAAI,CAACX,kBAAL,CAAwB,MAAM;AAC5Bc,mBAAO;AACR,WAFD;AAGD,SAJM,CAAP;AAKD,OAND;;AAOAF,gBAAU,GACPT,IADH,CACQ,MAAM;AACVY,eAAO,CAACC,GAAR,CAAY,KAAKvB,gBAAjB;AACAsB,eAAO,CAACC,GAAR,CAAY,KAAKtB,aAAjB;AACD,OAJH;AAKD;;AA5CM,GAnBI;;AAiEb;AACAuB,SAAO,GAAG;AACR,SAAKP,UAAL;AACD,GApEY;;AAqEbQ,SAAO,GAAG;AACR;AACA,SAAK1B,OAAL,GAAe,KAAK2B,MAAL,CAAYC,MAAZ,CAAmB5B,OAAlC;AACAuB,WAAO,CAACC,GAAR,CAAY,KAAKxB,OAAjB;AACD;;AAzEY,CAAf","names":["ActivityList","ActivityListTitle","axios","require","default","ACTIVITY_INFO_URL","components","data","user_id","ACTIVITY_ID_LIST","ACTIVITY_DATA","provide","userId","activityIdList","activityData","methods","loadActivityRecord","callback","post","then","response","ID_LIST_INDEX","DATA_INDEX","i","length","push","renderPage","self","myPromise1","Promise","resolve","console","log","mounted","created","$route","params"],"sourceRoot":"","sources":["D:\\MySQL\\pickup\\client\\src\\views\\ActivityListView.vue"],"sourcesContent":["<template>\n<div>\n  <div class=\"home mt-3\">\n    <h1> My Activity List</h1>\n  </div>\n  <div class=\"container mt-3\" style=\"align: center;\">\n    <activity-list-title></activity-list-title>\n    <activity-list></activity-list>\n  </div>\n</div>\n</template>\n\n<script>\nimport ActivityList from '../components/ActivityList/ActivityList.vue';\nimport ActivityListTitle from '../components/ActivityList/ActivityListTitle.vue';\n\nconst axios = require('axios').default;\n\nconst ACTIVITY_INFO_URL = 'http://localhost:4000/getActivityList';\n\nexport default {\n  components: {\n    'activity-list-title': ActivityListTitle,\n    'activity-list': ActivityList,\n  },\n  data() {\n    return {\n      user_id: null,\n      ACTIVITY_ID_LIST: [], // The list of activity id of a user\n      ACTIVITY_DATA: [], // Stores all the activity information of a user\n    };\n  },\n  provide() {\n    return {\n      userId: this.user_id,\n      activityIdList: this.ACTIVITY_ID_LIST,\n      activityData: this.ACTIVITY_DATA,\n    };\n  },\n  methods: {\n    /**\n     * @description\n     * Loads all the activity information of a user with given user_id\n     * Data is loaded into the local variable ACTIVITY_ID_LIST & ACTIVITY_DATA\n     * @var ID_LIST_INDEX @var DATA_INDEX\n     * Data package is sent in the form: {[ACTIVITY_ID_LIST],[ACTIVITY_DATA]}\n     * @param {*} callback\n     * This callback function is used to pass data from async function\n     */\n    loadActivityRecord(callback) {\n      axios.post(ACTIVITY_INFO_URL, { user_id: this.user_id })\n        .then((response) => {\n          const ID_LIST_INDEX = 0;\n          const DATA_INDEX = 1;\n          for (let i = 0; i < response.data[DATA_INDEX].length; i += 1) {\n            this.ACTIVITY_DATA.push(response.data[DATA_INDEX][i]);\n          }\n          for (let i = 0; i < response.data[ID_LIST_INDEX].length; i += 1) {\n            this.ACTIVITY_ID_LIST.push(response.data[ID_LIST_INDEX][i]);\n          }\n          this.ACTIVITY_ID_LIST = response.data[ID_LIST_INDEX];\n          return callback();\n        });\n    },\n    /**\n     * @description\n     * Call functions to load data into local memory\n     * TODO We need to load data into the local memory FIRST and then render the page\n     */\n    renderPage() {\n      const self = this;\n      const myPromise1 = function () {\n        return new Promise((resolve) => {\n          self.loadActivityRecord(() => {\n            resolve();\n          });\n        });\n      };\n      myPromise1()\n        .then(() => {\n          console.log(this.ACTIVITY_ID_LIST);\n          console.log(this.ACTIVITY_DATA);\n        });\n    },\n  },\n  // lIFE Cycle mounted, will be executed after app setup\n  mounted() {\n    this.renderPage();\n  },\n  created() {\n    // get the route parameter 'id' from router\n    this.user_id = this.$route.params.user_id;\n    console.log(this.user_id);\n  },\n};\n</script>\n\n<style>\n.save_button {\n  min-width: 110px;\n  max-width: 110px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}