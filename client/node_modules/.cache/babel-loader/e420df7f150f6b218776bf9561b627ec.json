{"ast":null,"code":"import Datepicker from 'vuejs3-datepicker';\nimport ActivityCard from '../components/Home/ActivityCard.vue';\n\nconst axios = require('axios').default;\n\nexport default {\n  components: {\n    Datepicker,\n    'activity-card': ActivityCard\n  },\n\n  data() {\n    return {\n      searchOrder: '',\n      searchType: 'type',\n      actInformation: [],\n      // store the activity information\n      page: 1,\n      // store the page number\n      userInput: '',\n      // store the user's input for searching\n      userPage: null,\n      // the page number user want to view\n      dateinput: new Date(),\n      minNum: null,\n      maxNum: null\n    };\n  },\n\n  computed: {\n    totalActivityNum() {\n      return this.actInformation.length;\n    },\n\n    numOfPages() {\n      const temp = Math.floor(this.totalActivityNum / 12);\n      const res = this.totalActivityNum % 12;\n\n      if (res === 0) {\n        return temp;\n      }\n\n      return temp + 1;\n    },\n\n    shownActivity() {\n      const res = [];\n\n      if (this.page * 12 > this.actInformation.length) {\n        for (let i = (this.page - 1) * 12; i < this.actInformation.length; i += 1) {\n          res.push(this.actInformation[i]);\n        }\n      } else {\n        for (let i = 0; i < 12; i += 1) {\n          res.push(this.actInformation[(this.page - 1) * 12 + i]);\n        }\n      }\n\n      return res;\n    }\n\n  },\n  watch: {\n    userPage() {\n      this.page = Number(this.userPage);\n    }\n\n  },\n  methods: {\n    switchTo(path) {\n      this.$router.replace(path);\n    },\n\n    searchActivity() {\n      axios.post('http://localhost:4000/searchActivity', {\n        searchType: this.searchType,\n        userInput: this.userInput\n      }).then(response => {\n        this.actInformation = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    askInfo() {\n      axios.post('http://localhost:4000/getActivityInfo').then(response => {\n        this.actInformation = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    searchByDate() {\n      axios.post('http://localhost:4000/searchByDate', {\n        dateinput: this.dateToString(this.dateinput)\n      }).then(response => {\n        this.actInformation = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    dateToString(date) {\n      const year = date.getFullYear();\n      let month = (date.getMonth() + 1).toString();\n      let day = date.getDate().toString();\n      let dateTime = '';\n\n      if (month.length === 1) {\n        month = '0' + month;\n      }\n\n      if (day.length === 1) {\n        day = '0' + day;\n      }\n\n      dateTime = year + '-' + month + '-' + day;\n      return dateTime;\n    },\n\n    printOut(a) {\n      console.log(a);\n    }\n\n  },\n\n  mounted() {\n    this.askInfo();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["Datepicker","ActivityCard","axios","require","default","components","data","searchOrder","searchType","actInformation","page","userInput","userPage","dateinput","Date","minNum","maxNum","computed","totalActivityNum","length","numOfPages","temp","Math","floor","res","shownActivity","i","push","watch","Number","methods","switchTo","path","$router","replace","searchActivity","post","then","response","catch","error","console","log","askInfo","searchByDate","dateToString","date","year","getFullYear","month","getMonth","toString","day","getDate","dateTime","printOut","a","mounted"],"sourceRoot":"","sources":["D:\\MySQL\\pickup\\client\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <table class=\"showTable\" cellspacing=\"0\" cellpadding=\"0\" align=\"center\">\r\n      <tr height=\"100px\"> <!--first row-->\r\n        <td id=\"swip\" align=\"center\" colspan=\"3\" border=\"1\">\r\n          <span>{{dateinput}}</span>\r\n        </td>\r\n        <td id=\"create\" align=\"center\">\r\n          <button id = \"createNew\" @click=\"switchTo('/activityCreation')\">\r\n          + Post a new event</button>\r\n        </td>\r\n      </tr>\r\n      <tr height=\"50\"> <!--second row-->\r\n        <td align=\"center\" width=\"30%\"> <!--search bar-->\r\n          <select v-model=\"searchType\">\r\n            <option value=\"type\">type</option>\r\n            <option value=\"title\">title</option>\r\n          </select>\r\n          <input v-model=\"userInput\">\r\n          <button @click=\"searchActivity\">search</button>\r\n        </td>\r\n        <td align=\"center\" width=\"20%\"> <!--order bar-->\r\n          <div class=\"rightSep\" id=\"order-select\">\r\n            <select v-model=\"searchOrder\">\r\n              <option disabled value=\"\">Please select one</option>\r\n              <option>Most Recent</option>\r\n              <option>Almost Full</option>\r\n              <option>Most Popular</option>\r\n            </select>\r\n          <button>Sort</button>\r\n          </div>\r\n        </td>\r\n        <td align=\"center\" width=\"20%\"> <!--date bar-->\r\n          <div class=\"rightSep\">\r\n            <datepicker v-model=\"dateinput\"></datepicker>\r\n            <button @click=\"searchByDate\">search</button>\r\n          </div>\r\n        </td>\r\n        <td align=\"center\" width=\"30%\"> <!--number bar-->\r\n          <span>number of members: </span>\r\n          <input v-model=\"minNum\" style=\"width:25px; height:25px\" onkeyup=\"this.value=this.value.replace(/[^\\d]/g,'')\">\r\n          <span> - </span>\r\n          <input v-model=\"maxNum\" style=\"width:25px; height:25px\" onkeyup=\"this.value=this.value.replace(/[^\\d]/g,'')\">\r\n        </td>\r\n      </tr>\r\n    </table>\r\n\r\n    <div class=\"actSquare\">\r\n      <dl>\r\n        <dt v-for=\"(act, index) in shownActivity\" :key=\"index\">\r\n          <activity-card :time=\"act.time\" :title=\"act.title\" :description=\"act.description\">\r\n          </activity-card>\r\n        </dt>\r\n      </dl>\r\n      <div class=\"pageList\">\r\n        <button @click=\"page -= 1\" :disabled=\"page == 1\">previous</button>\r\n        <span style=\"margin-left:10px; margin-right:10px\"> {{page}} </span>\r\n        <button @click=\"page += 1\" :disabled=\"page == numOfPages\">next</button>\r\n        <span> go to: </span>\r\n        <select v-model=\"userPage\">\r\n          <option v-for=\"p in numOfPages\" :key=\"p\" :disabled=\"p == page\">{{p}}</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Datepicker from 'vuejs3-datepicker';\r\nimport ActivityCard from '../components/Home/ActivityCard.vue';\r\n\r\nconst axios = require('axios').default;\r\n\r\nexport default {\r\n  components: {\r\n    Datepicker,\r\n    'activity-card': ActivityCard,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      searchOrder: '',\r\n      searchType: 'type',\r\n      actInformation: [], // store the activity information\r\n      page: 1, // store the page number\r\n      userInput: '', // store the user's input for searching\r\n      userPage: null, // the page number user want to view\r\n      dateinput: new Date(),\r\n      minNum: null,\r\n      maxNum: null,\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    totalActivityNum() {\r\n      return this.actInformation.length;\r\n    },\r\n\r\n    numOfPages() {\r\n      const temp = Math.floor(this.totalActivityNum / 12);\r\n      const res = this.totalActivityNum % 12;\r\n      if (res === 0) {\r\n        return temp;\r\n      }\r\n      return temp + 1;\r\n    },\r\n\r\n    shownActivity() {\r\n      const res = [];\r\n      if (this.page * 12 > this.actInformation.length) {\r\n        for (let i = (this.page - 1) * 12; i < this.actInformation.length; i += 1) {\r\n          res.push(this.actInformation[i]);\r\n        }\r\n      } else {\r\n        for (let i = 0; i < 12; i += 1) {\r\n          res.push(this.actInformation[(this.page - 1) * 12 + i]);\r\n        }\r\n      }\r\n      return res;\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    userPage() {\r\n      this.page = Number(this.userPage);\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    switchTo(path) {\r\n      this.$router.replace(path);\r\n    },\r\n\r\n    searchActivity() {\r\n      axios.post(\r\n        'http://localhost:4000/searchActivity',\r\n        { searchType: this.searchType, userInput: this.userInput },\r\n      )\r\n        .then((response) => {\r\n          this.actInformation = response.data;\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    askInfo() {\r\n      axios.post('http://localhost:4000/getActivityInfo')\r\n        .then((response) => {\r\n          this.actInformation = response.data;\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    searchByDate() {\r\n      axios.post(\r\n        'http://localhost:4000/searchByDate',\r\n        { dateinput: this.dateToString(this.dateinput) },\r\n      )\r\n        .then((response) => {\r\n          this.actInformation = response.data;\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    dateToString(date) {\r\n      const year = date.getFullYear();\r\n      let month = (date.getMonth() + 1).toString();\r\n      let day = (date.getDate()).toString();\r\n      let dateTime = '';\r\n      if (month.length === 1) {\r\n        month = '0' + month;\r\n      }\r\n      if (day.length === 1) {\r\n        day = '0' + day;\r\n      }\r\n      dateTime = year + '-' + month + '-' + day;\r\n      return dateTime;\r\n    },\r\n\r\n    printOut(a) {\r\n      console.log(a);\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.askInfo();\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n<style>\r\n#swip {\r\n  border-style: solid; border-width: 0px 1px 1px 0px;\r\n}\r\n\r\n#create {\r\n  border-style: solid; border-width: 0px 0px 1px 0px;\r\n}\r\n\r\n#createNew {\r\n  text-align:center;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  height:45px; width: 200px;\r\n}\r\n\r\n.rightSep{\r\n  width: 350px;\r\n  margin: 5px;\r\n  border-style: solid; border-width: 0px 1px 0px 0px;\r\n}\r\n\r\n.showTable{\r\n  width: 100%;\r\n  border-style: solid; border-width: 1px 0px 1px 0px; border-color: black;\r\n}\r\n\r\n.actSquare{\r\n  padding-left: 4%; padding-right: 4%; padding-top: 1%;\r\n  align-content: center;\r\n}\r\n\r\n.pageList{\r\n  position: fixed; bottom: 0%;\r\n  width: 100%; height: 5%;\r\n  background-color: white;\r\n}\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}