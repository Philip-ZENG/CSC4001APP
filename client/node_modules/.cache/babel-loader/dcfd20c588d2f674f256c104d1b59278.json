{"ast":null,"code":"import { createApp } from 'vue';\nimport ActivityListCard from '../components/ActivityListCard.vue'; // Register Component\n\nconst app = createApp({});\napp.component('activity-list-card', ActivityListCard);\n\nconst axios = require('axios').default;\n\nconst ACTIVITY_INFO_URL = 'http://localhost:4000/getActivityInfo';\nexport default {\n  components: {\n    ActivityListCard\n  },\n  name: 'ActivityList',\n\n  data() {\n    return {\n      user_id: 8,\n      ACTIVITY_ID_LIST: null,\n      // Stores the package sent by the server (all the activity information of a user)\n      ACTIVITY_DATA: null,\n      title: null,\n      time: null,\n      quota_left: null,\n      state: null,\n      action: null\n    };\n  },\n\n  methods: {\n    loadActivityRecord(callback) {\n      axios.post(ACTIVITY_INFO_URL, {\n        user_id: this.user_id\n      }).then(response => {\n        const DATA_INDEX = 1;\n        const ID_LIST_INDEX = 0;\n        this.ACTIVITY_DATA = response.data[DATA_INDEX];\n        this.ACTIVITY_ID_LIST = response.data[ID_LIST_INDEX];\n        return callback();\n      });\n    },\n\n    renderActivityCard(index) {\n      this.title = this.ACTIVITY_DATA[index].title;\n      this.time = this.ACTIVITY_DATA[index].time;\n      this.quota_left = this.ACTIVITY_DATA[index].quota_left;\n      this.state = 'ACTIVE';\n\n      if (this.state === 'ACTIVE') {\n        this.action = 'Deactivate';\n      } else {\n        this.action = 'Activate';\n      }\n    },\n\n    renderPage() {\n      const self = this;\n\n      const myPromise1 = function () {\n        return new Promise(resolve => {\n          self.loadActivityRecord(() => {\n            resolve();\n          });\n        });\n      };\n\n      myPromise1().then(() => {\n        self.renderActivityCard(0);\n      });\n    }\n\n  },\n\n  mounted() {\n    this.renderPage();\n  }\n\n};","map":{"version":3,"mappings":"AAuFA,SAASA,SAAT,QAA0B,KAA1B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B,C,CAEA;;AACA,MAAMC,GAAE,GAAIF,SAAS,CAAC,EAAD,CAArB;AACAE,GAAG,CAACC,SAAJ,CAAc,oBAAd,EAAoCF,gBAApC;;AAEA,MAAMG,KAAI,GAAIC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEA,MAAMC,iBAAgB,GAAI,uCAA1B;AAEA,eAAe;AACbC,YAAU,EAAE;AAAEP;AAAF,GADC;AAEbQ,MAAI,EAAE,cAFO;;AAGbC,MAAI,GAAG;AACL,WAAO;AACLC,aAAO,EAAE,CADJ;AAELC,sBAAgB,EAAE,IAFb;AAGL;AACAC,mBAAa,EAAE,IAJV;AAKLC,WAAK,EAAE,IALF;AAMLC,UAAI,EAAE,IAND;AAOLC,gBAAU,EAAE,IAPP;AAQLC,WAAK,EAAE,IARF;AASLC,YAAM,EAAE;AATH,KAAP;AAWD,GAfY;;AAgBbC,SAAO,EAAE;AACPC,sBAAkB,CAACC,QAAD,EAAW;AAC3BjB,WAAK,CAACkB,IAAN,CAAWf,iBAAX,EAA8B;AAAEI,eAAO,EAAE,KAAKA;AAAhB,OAA9B,EACGY,IADH,CACSC,QAAD,IAAc;AAClB,cAAMC,UAAS,GAAI,CAAnB;AACA,cAAMC,aAAY,GAAI,CAAtB;AACA,aAAKb,aAAL,GAAqBW,QAAQ,CAACd,IAAT,CAAce,UAAd,CAArB;AACA,aAAKb,gBAAL,GAAwBY,QAAQ,CAACd,IAAT,CAAcgB,aAAd,CAAxB;AACA,eAAOL,QAAQ,EAAf;AACD,OAPH;AAQD,KAVM;;AAWPM,sBAAkB,CAACC,KAAD,EAAQ;AACxB,WAAKd,KAAL,GAAa,KAAKD,aAAL,CAAmBe,KAAnB,EAA0Bd,KAAvC;AACA,WAAKC,IAAL,GAAY,KAAKF,aAAL,CAAmBe,KAAnB,EAA0Bb,IAAtC;AACA,WAAKC,UAAL,GAAkB,KAAKH,aAAL,CAAmBe,KAAnB,EAA0BZ,UAA5C;AACA,WAAKC,KAAL,GAAa,QAAb;;AACA,UAAI,KAAKA,KAAL,KAAe,QAAnB,EAA6B;AAC3B,aAAKC,MAAL,GAAc,YAAd;AACF,OAFA,MAEO;AACL,aAAKA,MAAL,GAAc,UAAd;AACF;AACD,KArBM;;AAsBPW,cAAU,GAAG;AACX,YAAMC,IAAG,GAAI,IAAb;;AACA,YAAMC,UAAS,GAAI,YAAY;AAC7B,eAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9BH,cAAI,CAACV,kBAAL,CAAwB,MAAM;AAC5Ba,mBAAO;AACR,WAFD;AAGD,SAJM,CAAP;AAKD,OAND;;AAOAF,gBAAU,GACPR,IADH,CACQ,MAAM;AACVO,YAAI,CAACH,kBAAL,CAAwB,CAAxB;AACD,OAHH;AAID;;AAnCM,GAhBI;;AAqDbO,SAAO,GAAG;AACR,SAAKL,UAAL;AACD;;AAvDY,CAAf","names":["createApp","ActivityListCard","app","component","axios","require","default","ACTIVITY_INFO_URL","components","name","data","user_id","ACTIVITY_ID_LIST","ACTIVITY_DATA","title","time","quota_left","state","action","methods","loadActivityRecord","callback","post","then","response","DATA_INDEX","ID_LIST_INDEX","renderActivityCard","index","renderPage","self","myPromise1","Promise","resolve","mounted"],"sourceRoot":"","sources":["C:\\Users\\22414\\Desktop\\App\\CSC4001APP\\client\\src\\views\\ActivityListView.vue"],"sourcesContent":["<template>\r\n<div>\r\n  <div class=\"home mt-3\">\r\n    <h1> My Activity List</h1>\r\n  </div>\r\n\r\n  <div class=\"container mt-3\" style=\"align: center;\">\r\n    <div class=\"card\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <h3>Title</h3>\r\n        </div>\r\n        <div class=\"col\">\r\n          <h3>Time</h3>\r\n        </div>\r\n        <div class=\"col\">\r\n          <h3>Remaining Quota</h3>\r\n        </div>\r\n        <div class=\"col\">\r\n          <h3>Stauts</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card mt-2\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <h4>{{ title }}</h4>\r\n        </div>\r\n        <div class=\"col\">\r\n          <h4>{{ time }}</h4>\r\n        </div>\r\n        <div class=\"col\">\r\n          <h4>{{ quota_left }}</h4>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"dropdown\">\r\n            <button class=\"btn btn-success dropdown-toggle save_button\"\r\n            type=\"button\" id=\"dropdownMenuButton\"\r\n            data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              {{ state }}\r\n            </button>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n              <a class=\"dropdown-item\" href=\"http://localhost:8080/#/activityManagement\">Detail</a>\r\n              <a class=\"dropdown-item\">{{ action }}</a>\r\n              <a class=\"dropdown-item\">Delete</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card mt-2\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <h4>Running</h4>\r\n        </div>\r\n        <div class=\"col\">\r\n          <h4>2022/4/10 19:00</h4>\r\n        </div>\r\n        <div class=\"col\">\r\n          <h4>3</h4>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"dropdown\">\r\n            <button class=\"btn btn-secondary dropdown-toggle save_button\"\r\n            type=\"button\" id=\"dropdownMenuButton\"\r\n            data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              INACTIVE\r\n            </button>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n              <a class=\"dropdown-item\" href=\"http://localhost:8080/#/activityManagement\">Detail</a>\r\n              <a class=\"dropdown-item\">Activate</a>\r\n              <a class=\"dropdown-item\">Delete</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <activity-list-card state=\"INACTIVE\"></activity-list-card>\r\n\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { createApp } from 'vue';\r\nimport ActivityListCard from '../components/ActivityListCard.vue';\r\n\r\n// Register Component\r\nconst app = createApp({});\r\napp.component('activity-list-card', ActivityListCard);\r\n\r\nconst axios = require('axios').default;\r\n\r\nconst ACTIVITY_INFO_URL = 'http://localhost:4000/getActivityInfo';\r\n\r\nexport default {\r\n  components: { ActivityListCard },\r\n  name: 'ActivityList',\r\n  data() {\r\n    return {\r\n      user_id: 8,\r\n      ACTIVITY_ID_LIST: null,\r\n      // Stores the package sent by the server (all the activity information of a user)\r\n      ACTIVITY_DATA: null,\r\n      title: null,\r\n      time: null,\r\n      quota_left: null,\r\n      state: null,\r\n      action: null,\r\n    };\r\n  },\r\n  methods: {\r\n    loadActivityRecord(callback) {\r\n      axios.post(ACTIVITY_INFO_URL, { user_id: this.user_id })\r\n        .then((response) => {\r\n          const DATA_INDEX = 1;\r\n          const ID_LIST_INDEX = 0;\r\n          this.ACTIVITY_DATA = response.data[DATA_INDEX];\r\n          this.ACTIVITY_ID_LIST = response.data[ID_LIST_INDEX];\r\n          return callback();\r\n        });\r\n    },\r\n    renderActivityCard(index) {\r\n      this.title = this.ACTIVITY_DATA[index].title;\r\n      this.time = this.ACTIVITY_DATA[index].time;\r\n      this.quota_left = this.ACTIVITY_DATA[index].quota_left;\r\n      this.state = 'ACTIVE';\r\n      if (this.state === 'ACTIVE') {\r\n        this.action = 'Deactivate';\r\n      } else {\r\n        this.action = 'Activate';\r\n      }\r\n    },\r\n    renderPage() {\r\n      const self = this;\r\n      const myPromise1 = function () {\r\n        return new Promise((resolve) => {\r\n          self.loadActivityRecord(() => {\r\n            resolve();\r\n          });\r\n        });\r\n      };\r\n      myPromise1()\r\n        .then(() => {\r\n          self.renderActivityCard(0);\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.renderPage();\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.save_button {\r\n  min-width: 110px;\r\n  max-width: 110px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}