{"ast":null,"code":"/**\n * @description\n * This is an activity card component, used to display information of a specific component\n */\nexport default {\n  /**\n   * @var state\n   * Has two value 'ACTIVE' and 'INACTIVE'\n   * Used to notify whether the activity is posted or stored as drafts\n   * @var action\n   * Has two value 'Deactivate' and 'Activate'\n   * Used to post an activity or pull back an activity\n   */\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    time: {\n      type: String,\n      required: true\n    },\n    quota_left: {\n      type: Number,\n      required: true\n    },\n    state: {\n      type: String,\n      default: 'ACTIVE'\n    },\n    action: {\n      type: String,\n      default: 'Deactivate'\n    }\n  },\n\n  data() {\n    return {\n      curState: this.state,\n      curAction: this.action\n    };\n  },\n\n  methods: {\n    toggleState() {\n      if (this.curState === 'ACTIVE') {\n        this.curState = 'INACTIVE';\n        this.curAction = 'Activate';\n      } else {\n        this.curState = 'ACTIVE';\n        this.curAction = 'Deactivate';\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoCA;;;;AAIA,eAAe;AACb;;;;;;;;AAQAA,OAAK,EAAE;AACLC,SAAK,EAAE;AAAEC,UAAI,EAAEC,MAAR;AAAgBC,cAAQ,EAAE;AAA1B,KADF;AAELC,QAAI,EAAE;AAAEH,UAAI,EAAEC,MAAR;AAAgBC,cAAQ,EAAE;AAA1B,KAFD;AAGLE,cAAU,EAAE;AAAEJ,UAAI,EAAEK,MAAR;AAAgBH,cAAQ,EAAE;AAA1B,KAHP;AAILI,SAAK,EAAE;AAAEN,UAAI,EAAEC,MAAR;AAAgBM,aAAO,EAAE;AAAzB,KAJF;AAKLC,UAAM,EAAE;AAAER,UAAI,EAAEC,MAAR;AAAgBM,aAAO,EAAE;AAAzB;AALH,GATM;;AAgBbE,MAAI,GAAG;AACL,WAAO;AACLC,cAAQ,EAAE,KAAKJ,KADV;AAELK,eAAS,EAAE,KAAKH;AAFX,KAAP;AAID,GArBY;;AAsBbI,SAAO,EAAE;AACPC,eAAW,GAAG;AACZ,UAAI,KAAKH,QAAL,KAAkB,QAAtB,EAAgC;AAC9B,aAAKA,QAAL,GAAgB,UAAhB;AACA,aAAKC,SAAL,GAAiB,UAAjB;AACF,OAHA,MAGO;AACL,aAAKD,QAAL,GAAgB,QAAhB;AACA,aAAKC,SAAL,GAAiB,YAAjB;AACF;AACD;;AATM;AAtBI,CAAf","names":["props","title","type","String","required","time","quota_left","Number","state","default","action","data","curState","curAction","methods","toggleState"],"sourceRoot":"","sources":["D:\\MySQL\\pickup\\client\\src\\components\\ActivityList\\ActivityListCard.vue"],"sourcesContent":["<template>\n  <div class=\"card mt-2\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <h4>{{ title }}</h4>\n      </div>\n      <div class=\"col\">\n        <h4>{{ time }}</h4>\n      </div>\n      <div class=\"col\">\n        <h4>{{ quota_left }}</h4>\n      </div>\n      <div class=\"col\">\n        <div class=\"dropdown\">\n          <button\n            class=\"btn btn-success dropdown-toggle save_button\"\n            type=\"button\"\n            id=\"dropdownMenuButton\"\n            data-bs-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            {{ state }}\n          </button>\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n            <a class=\"dropdown-item\" href=\"http://localhost:8080/#/activityManagement\">Detail</a>\n            <a class=\"dropdown-item\" @click=\"toggleState\">{{ action }}</a>\n            <a class=\"dropdown-item\">Delete</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/**\n * @description\n * This is an activity card component, used to display information of a specific component\n */\nexport default {\n  /**\n   * @var state\n   * Has two value 'ACTIVE' and 'INACTIVE'\n   * Used to notify whether the activity is posted or stored as drafts\n   * @var action\n   * Has two value 'Deactivate' and 'Activate'\n   * Used to post an activity or pull back an activity\n   */\n  props: {\n    title: { type: String, required: true },\n    time: { type: String, required: true },\n    quota_left: { type: Number, required: true },\n    state: { type: String, default: 'ACTIVE' },\n    action: { type: String, default: 'Deactivate' },\n  },\n  data() {\n    return {\n      curState: this.state,\n      curAction: this.action,\n    };\n  },\n  methods: {\n    toggleState() {\n      if (this.curState === 'ACTIVE') {\n        this.curState = 'INACTIVE';\n        this.curAction = 'Activate';\n      } else {\n        this.curState = 'ACTIVE';\n        this.curAction = 'Deactivate';\n      }\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}