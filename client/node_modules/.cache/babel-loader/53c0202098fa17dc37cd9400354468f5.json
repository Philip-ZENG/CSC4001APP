{"ast":null,"code":"const axios = require('axios').default;\n\nconst GETEMAIL_URL = 'http://localhost:4000/getEmail';\nconst GETCOUNT_URL = 'http://localhost:4000/getCount';\nconst REGISTER_URL = 'http://localhost:4000/register';\nexport default {\n  name: 'RegisterView',\n\n  data() {\n    return {\n      email: null,\n      count: null,\n      userAccount: null,\n      password: null\n    };\n  },\n\n  mounted() {\n    axios.get(GETEMAIL_URL).then(results => {\n      this.email = results.data.email_address;\n    });\n    axios.get(GETCOUNT_URL).then(results => {\n      this.count = results.data.numberOfRegistery;\n    });\n  },\n\n  methods: {\n    pageUpdate() {\n      axios.get(GETEMAIL_URL).then(results => {\n        this.email = results.data.email_address;\n      });\n      axios.get(GETCOUNT_URL).then(results => {\n        this.count = results.data.numberOfRegistery;\n      });\n    },\n\n    postMessage() {\n      const account = this.userAccount;\n      const keyword = this.password;\n      axios.post(REGISTER_URL, {\n        userAccount: account,\n        password: keyword\n      });\n      setTimeout(this.pageUpdate(), 500);\n    },\n\n    goToLogin() {\n      this.$router.push('/login');\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA2BA,MAAMA,KAAI,GAAIC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEA,MAAMC,YAAW,GAAI,gCAArB;AACA,MAAMC,YAAW,GAAI,gCAArB;AACA,MAAMC,YAAW,GAAI,gCAArB;AAEA,eAAe;AACbC,MAAI,EAAE,cADO;;AAGbC,MAAI,GAAG;AACL,WAAO;AACLC,WAAK,EAAE,IADF;AAELC,WAAK,EAAE,IAFF;AAGLC,iBAAW,EAAE,IAHR;AAILC,cAAQ,EAAE;AAJL,KAAP;AAMD,GAVY;;AAYbC,SAAO,GAAG;AACRZ,SAAK,CAACa,GAAN,CAAUV,YAAV,EAAwBW,IAAxB,CAA8BC,OAAD,IAAa;AACxC,WAAKP,KAAL,GAAaO,OAAO,CAACR,IAAR,CAAaS,aAA1B;AACD,KAFD;AAIAhB,SAAK,CAACa,GAAN,CAAUT,YAAV,EAAwBU,IAAxB,CAA8BC,OAAD,IAAa;AACxC,WAAKN,KAAL,GAAaM,OAAO,CAACR,IAAR,CAAaU,iBAA1B;AACD,KAFD;AAGD,GApBY;;AAsBbC,SAAO,EAAE;AACPC,cAAU,GAAG;AACXnB,WAAK,CAACa,GAAN,CAAUV,YAAV,EAAwBW,IAAxB,CAA8BC,OAAD,IAAa;AACxC,aAAKP,KAAL,GAAaO,OAAO,CAACR,IAAR,CAAaS,aAA1B;AACD,OAFD;AAIAhB,WAAK,CAACa,GAAN,CAAUT,YAAV,EAAwBU,IAAxB,CAA8BC,OAAD,IAAa;AACxC,aAAKN,KAAL,GAAaM,OAAO,CAACR,IAAR,CAAaU,iBAA1B;AACD,OAFD;AAGD,KATM;;AAWPG,eAAW,GAAG;AACZ,YAAMC,OAAM,GAAI,KAAKX,WAArB;AACA,YAAMY,OAAM,GAAI,KAAKX,QAArB;AACAX,WAAK,CAACuB,IAAN,CAAWlB,YAAX,EAAyB;AAAEK,mBAAW,EAAEW,OAAf;AAAwBV,gBAAQ,EAAEW;AAAlC,OAAzB;AACAE,gBAAU,CAAC,KAAKL,UAAL,EAAD,EAAoB,GAApB,CAAV;AACD,KAhBM;;AAkBPM,aAAS,GAAG;AACV,WAAKC,OAAL,CAAaC,IAAb,CAAkB,QAAlB;AACD;;AApBM;AAtBI,CAAf","names":["axios","require","default","GETEMAIL_URL","GETCOUNT_URL","REGISTER_URL","name","data","email","count","userAccount","password","mounted","get","then","results","email_address","numberOfRegistery","methods","pageUpdate","postMessage","account","keyword","post","setTimeout","goToLogin","$router","push"],"sourceRoot":"","sources":["D:\\MySQL\\pickup\\client\\src\\views\\RegisterView.vue"],"sourcesContent":["<template>\r\n  <section>\r\n    <div class=\"about\">\r\n      <h1>This is the register page</h1>\r\n    </div>\r\n\r\n    <div class=\"show latest email\">\r\n      <p>This is the latest received email</p>\r\n      <h1>{{ email }}</h1>\r\n      <p>The total number of email registered is</p>\r\n      <h1>{{ count }}</h1>\r\n    </div>\r\n\r\n    <div class=\"userInput\">\r\n      <p>Email Address</p>\r\n      <input v-model=\"userAccount\" placeholder=\"Email\" />\r\n      <p>Password</p>\r\n      <input v-model=\"password\" placeholder=\"Password\" />\r\n      <p></p>\r\n      <button v-on:click=\"postMessage\">Register</button>\r\n    </div>\r\n    <br>\r\n    <button @click=\"goToLogin\">GoToLogin</button>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nconst axios = require('axios').default;\r\n\r\nconst GETEMAIL_URL = 'http://localhost:4000/getEmail';\r\nconst GETCOUNT_URL = 'http://localhost:4000/getCount';\r\nconst REGISTER_URL = 'http://localhost:4000/register';\r\n\r\nexport default {\r\n  name: 'RegisterView',\r\n\r\n  data() {\r\n    return {\r\n      email: null,\r\n      count: null,\r\n      userAccount: null,\r\n      password: null,\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    axios.get(GETEMAIL_URL).then((results) => {\r\n      this.email = results.data.email_address;\r\n    });\r\n\r\n    axios.get(GETCOUNT_URL).then((results) => {\r\n      this.count = results.data.numberOfRegistery;\r\n    });\r\n  },\r\n\r\n  methods: {\r\n    pageUpdate() {\r\n      axios.get(GETEMAIL_URL).then((results) => {\r\n        this.email = results.data.email_address;\r\n      });\r\n\r\n      axios.get(GETCOUNT_URL).then((results) => {\r\n        this.count = results.data.numberOfRegistery;\r\n      });\r\n    },\r\n\r\n    postMessage() {\r\n      const account = this.userAccount;\r\n      const keyword = this.password;\r\n      axios.post(REGISTER_URL, { userAccount: account, password: keyword });\r\n      setTimeout(this.pageUpdate(), 500);\r\n    },\r\n\r\n    goToLogin() {\r\n      this.$router.push('/login');\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}