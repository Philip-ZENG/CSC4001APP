{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card mt-2\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col\"\n};\nconst _hoisted_4 = {\n  class: \"col\"\n};\nconst _hoisted_5 = {\n  class: \"col\"\n};\nconst _hoisted_6 = {\n  class: \"col\"\n};\nconst _hoisted_7 = {\n  class: \"dropdown\"\n};\nconst _hoisted_8 = {\n  class: \"btn btn-success dropdown-toggle save_button\",\n  type: \"button\",\n  id: \"dropdownMenuButton\",\n  \"data-bs-toggle\": \"dropdown\",\n  \"aria-haspopup\": \"true\",\n  \"aria-expanded\": \"false\"\n};\nconst _hoisted_9 = {\n  class: \"dropdown-menu\",\n  \"aria-labelledby\": \"dropdownMenuButton\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"li\", null, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"dropdown-item\",\n  type: \"button\",\n  href: \"http://localhost:8080/#/activityManagement\"\n}, \" Detail \")], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h4\", null, _toDisplayString($props.title), 1\n  /* TEXT */\n  )]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h4\", null, _toDisplayString($props.time), 1\n  /* TEXT */\n  )]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h4\", null, _toDisplayString($props.quota_left), 1\n  /* TEXT */\n  )]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", _hoisted_8, _toDisplayString($props.state), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _createElementVNode(\"li\", null, [_createElementVNode(\"button\", {\n    class: \"dropdown-item\",\n    type: \"button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleState && $options.toggleState(...args))\n  }, _toDisplayString($props.action), 1\n  /* TEXT */\n  )]), _createElementVNode(\"li\", null, [_createElementVNode(\"button\", {\n    class: \"dropdown-item\",\n    type: \"button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.deleteActivity && $options.deleteActivity(...args))\n  }, \"Delete\")])])])])])]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;AAGNA,OAAK,EAAC;;;AAGNA,OAAK,EAAC;;;AAGNA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;AAEPA,OAAK,EAAC;AACNC,MAAI,EAAC;AACLC,IAAE,EAAC;AACH,oBAAe;AACf,mBAAc;AACd,mBAAc;;;AAIXF,OAAK,EAAC;AAAgB,qBAAgB;;;iCACzCG,oBAQK,IARL,EAQK,IARL,EAQK,cAPHA,oBAMS,QANT,EAMS;AALPH,OAAK,EAAC,eAKC;AAJPC,MAAI,EAAC,QAIE;AAHPG,MAAI,EAAC;AAGE,CANT,EAIC,UAJD,CAOG,CARL;;AAAA;;;uBAxBVC,oBAyCM,KAzCN,cAyCM,CAxCJF,oBAuCM,KAvCN,cAuCM,CAtCJA,oBAEM,KAFN,cAEM,CADJA,oBAAoB,IAApB,EAAoB,IAApB,EAAoBG,iBAAbC,YAAa,CAApB,EAAY;AAAA;AAAZ,GACI,CAFN,CAsCI,EAnCJJ,oBAEM,KAFN,cAEM,CADJA,oBAAmB,IAAnB,EAAmB,IAAnB,EAAmBG,iBAAZC,WAAY,CAAnB,EAAW;AAAA;AAAX,GACI,CAFN,CAmCI,EAhCJJ,oBAEM,KAFN,cAEM,CADJA,oBAAyB,IAAzB,EAAyB,IAAzB,EAAyBG,iBAAlBC,iBAAkB,CAAzB,EAAiB;AAAA;AAAjB,GACI,CAFN,CAgCI,EA7BJJ,oBA4BM,KA5BN,cA4BM,CA3BJA,oBA0BM,KA1BN,cA0BM,CAzBJA,oBASS,QATT,cASSG,iBADJC,YACI,CATT,EAQU;AAAA;AARV,GAyBI,EAfJJ,oBAcM,KAdN,cAcM,CAbJK,WAaI,EAJJL,oBAEK,IAFL,EAEK,IAFL,EAEK,CADHA,oBAAsF,QAAtF,EAAsF;AAA9EH,SAAK,EAAC,eAAwE;AAAxDC,QAAI,EAAC,QAAmD;AAAzCQ,WAAK,yCAAEC,qDAAF;AAAoC,GAAtF,mBAAoEH,cAApE,EAA0E;AAAA;AAA1E,GACG,CAFL,CAII,EADJJ,oBAA4F,IAA5F,EAA4F,IAA5F,EAA4F,CAAxFA,oBAAmF,QAAnF,EAAmF;AAA3EH,SAAK,EAAC,eAAqE;AAArDC,QAAI,EAAC,QAAgD;AAAtCQ,WAAK,yCAAEC,2DAAF;AAAiC,GAAnF,EAAoE,QAApE,CAAwF,CAA5F,CACI,CAdN,CAeI,CA1BN,CA2BI,CA5BN,CA6BI,CAvCN,CAwCI,CAzCN","names":["class","type","id","_createElementVNode","href","_createElementBlock","_toDisplayString","$props","_hoisted_10","onClick","$options"],"sourceRoot":"","sources":["D:\\MySQL\\pickup\\client\\src\\components\\ActivityList\\ActivityListCard.vue"],"sourcesContent":["<template>\n  <div class=\"card mt-2\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <h4>{{ title }}</h4>\n      </div>\n      <div class=\"col\">\n        <h4>{{ time }}</h4>\n      </div>\n      <div class=\"col\">\n        <h4>{{ quota_left }}</h4>\n      </div>\n      <div class=\"col\">\n        <div class=\"dropdown\">\n          <button\n            class=\"btn btn-success dropdown-toggle save_button\"\n            type=\"button\"\n            id=\"dropdownMenuButton\"\n            data-bs-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            {{ state }}\n          </button>\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n            <li>\n              <button\n                class=\"dropdown-item\"\n                type=\"button\"\n                href=\"http://localhost:8080/#/activityManagement\"\n              >\n                Detail\n              </button>\n            </li>\n            <li>\n              <button class=\"dropdown-item\" type=\"button\" @click=\"toggleState\">{{ action }}</button>\n            </li>\n            <li><button class=\"dropdown-item\" type=\"button\" @click=\"deleteActivity\">Delete</button></li>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>import { numberLiteralTypeAnnotation } from \"@babel/types\";\n\n/**\n * @description\n * This is an activity card component, used to display information of a specific component\n */\nexport default {\n  /**\n   * @var state\n   * Has two value 'ACTIVE' and 'INACTIVE'\n   * Used to notify whether the activity is posted or stored as drafts\n   * @var action\n   * Has two value 'Deactivate' and 'Activate'\n   * Used to post an activity or pull back an activity\n   */\n  props: {\n    act_id: {type: Number, required: true},\n    title: { type: String, required: true },\n    time: { type: String, required: true },\n    quota_left: { type: Number, required: true },\n    state: { type: String, default: 'ACTIVE' },\n    action: { type: String, default: 'Deactivate' },\n  },\n  data() {\n    return {\n      curState: this.state,\n      curAction: this.action,\n    };\n  },\n  methods: {\n    toggleState() {\n      if (this.curState === 'ACTIVE') {\n        this.curState = 'INACTIVE';\n        this.curAction = 'Activate';\n      } else {\n        this.curState = 'ACTIVE';\n        this.curAction = 'Deactivate';\n      }\n    },\n    deleteActivity(){\n\n    }\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}