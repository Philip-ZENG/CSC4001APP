{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"about\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"This is the register page\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  class: \"show latest email\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, \"This is the latest received email\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"The total number of email registered is\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = {\n  class: \"userInput\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Email Address\", -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Password\", -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"h1\", null, _toDisplayString($data.email), 1\n  /* TEXT */\n  ), _hoisted_4, _createElementVNode(\"h1\", null, _toDisplayString($data.count), 1\n  /* TEXT */\n  )]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.userAccount = $event),\n    placeholder: \"Email\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.userAccount]]), _hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    placeholder: \"Password\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.password]]), _hoisted_8, _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.postMessage && $options.postMessage(...args))\n  }, \"Register\")]), _hoisted_9, _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.goToLogin && $options.goToLogin(...args))\n  }, \"GoToLogin\")]);\n}","map":{"version":3,"mappings":";;gCAEIA,oBAEM,KAFN,EAEM;AAFDC,OAAK,EAAC;AAEL,CAFN,EAAkB,cAChBD,oBAAkC,IAAlC,EAAkC,IAAlC,EAAI,2BAAJ,CADgB,CAAlB;;AAAA;;;AAIKC,OAAK,EAAC;;;gCACTD,oBAAwC,GAAxC,EAAwC,IAAxC,EAAG,mCAAH,EAAoC;AAAA;AAApC;;gCAEAA,oBAA8C,GAA9C,EAA8C,IAA9C,EAAG,yCAAH,EAA0C;AAAA;AAA1C;;;AAIGC,OAAK,EAAC;;;gCACTD,oBAAoB,GAApB,EAAoB,IAApB,EAAG,eAAH,EAAgB;AAAA;AAAhB;;gCAEAA,oBAAe,GAAf,EAAe,IAAf,EAAG,UAAH,EAAW;AAAA;AAAX;;gCAEAA,oBAAO,GAAP,EAAO,IAAP,EAAO,IAAP,EAAO;AAAA;AAAP;;gCAGFA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;uBApBFE,oBAsBU,SAtBV,EAsBU,IAtBV,EAsBU,CArBRC,UAqBQ,EAjBRH,oBAKM,KALN,cAKM,CAJJI,UAII,EAHJJ,oBAAoB,IAApB,EAAoB,IAApB,EAAoBK,iBAAbC,WAAa,CAApB,EAAY;AAAA;AAAZ,GAGI,EAFJC,UAEI,EADJP,oBAAoB,IAApB,EAAoB,IAApB,EAAoBK,iBAAbC,WAAa,CAApB,EAAY;AAAA;AAAZ,GACI,CALN,CAiBQ,EAVRN,oBAOM,KAPN,cAOM,CANJQ,UAMI,kBALJR,oBAAmD,OAAnD,EAAmD;+DAAnCM,oBAAWG,OAAwB;AAAtBC,eAAW,EAAC;AAAU,GAAnD;;AAAA,oBAAgBJ,oBAKZ,EAJJK,UAII,kBAHJX,oBAAmD,OAAnD,EAAmD;+DAAnCM,iBAAQG,OAA2B;AAAzBC,eAAW,EAAC;AAAa,GAAnD;;AAAA,oBAAgBJ,iBAGZ,EAFJM,UAEI,EADJZ,oBAAkD,QAAlD,EAAkD;AAArCa,WAAK,yCAAEC,qDAAF;AAAgC,GAAlD,EAAiC,UAAjC,CACI,CAPN,CAUQ,EAFRC,UAEQ,EADRf,oBAA6C,QAA7C,EAA6C;AAApCa,WAAK,yCAAEC,iDAAF;AAA+B,GAA7C,EAA2B,WAA3B,CACQ,CAtBV","names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_hoisted_3","_toDisplayString","$data","_hoisted_4","_hoisted_6","$event","placeholder","_hoisted_7","_hoisted_8","onClick","$options","_hoisted_9"],"sourceRoot":"","sources":["D:\\MySQL\\pickup\\client\\src\\views\\RegisterView.vue"],"sourcesContent":["<template>\n  <section>\n    <div class=\"about\">\n      <h1>This is the register page</h1>\n    </div>\n\n    <div class=\"show latest email\">\n      <p>This is the latest received email</p>\n      <h1>{{ email }}</h1>\n      <p>The total number of email registered is</p>\n      <h1>{{ count }}</h1>\n    </div>\n\n    <div class=\"userInput\">\n      <p>Email Address</p>\n      <input v-model=\"userAccount\" placeholder=\"Email\" />\n      <p>Password</p>\n      <input v-model=\"password\" placeholder=\"Password\" />\n      <p></p>\n      <button v-on:click=\"postMessage\">Register</button>\n    </div>\n    <br>\n    <button @click=\"goToLogin\">GoToLogin</button>\n  </section>\n</template>\n\n<script>\nconst axios = require('axios').default;\n\nconst GETEMAIL_URL = 'http://localhost:4000/getEmail';\nconst GETCOUNT_URL = 'http://localhost:4000/getCount';\nconst REGISTER_URL = 'http://localhost:4000/register';\n\nexport default {\n  name: 'RegisterView',\n\n  data() {\n    return {\n      email: null,\n      count: null,\n      userAccount: null,\n      password: null,\n    };\n  },\n\n  mounted() {\n    axios.get(GETEMAIL_URL).then((results) => {\n      this.email = results.data.email_address;\n    });\n\n    axios.get(GETCOUNT_URL).then((results) => {\n      this.count = results.data.numberOfRegistery;\n    });\n  },\n\n  methods: {\n    pageUpdate() {\n      axios.get(GETEMAIL_URL).then((results) => {\n        this.email = results.data.email_address;\n      });\n\n      axios.get(GETCOUNT_URL).then((results) => {\n        this.count = results.data.numberOfRegistery;\n      });\n    },\n\n    postMessage() {\n      const account = this.userAccount;\n      const keyword = this.password;\n      axios.post(REGISTER_URL, { userAccount: account, password: keyword });\n      setTimeout(this.pageUpdate(), 500);\n    },\n\n    goToLogin() {\n      this.$router.push('/login');\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}