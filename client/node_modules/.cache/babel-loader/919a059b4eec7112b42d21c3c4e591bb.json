{"ast":null,"code":"import { createStore } from 'vuex';\nconst store = createStore({\n  // state is equivalent to data\n  state() {\n    return {\n      user_id: null,\n      user_token: null\n    };\n  },\n\n  // getter is equivalent to computed property\n  getters: {\n    getUserId(state) {\n      return state.user_id;\n    },\n\n    getUserToken(state) {\n      return state.user_token;\n    }\n\n  },\n  // mutation is equivalent to method\n  mutations: {\n    setUserId(state, data) {\n      state.user_id = data.user_id;\n    },\n\n    setUserToken(state, data) {\n      state.user_token = data.user_token;\n    }\n\n  },\n\n  /**\n   * action is similar to events, we should not call mutations directly from our vue app\n   * we should always call the action that wraps the mutation to execute them\n   */\n  actions: {\n    setUserId(context, data) {\n      context.commit('setUserId', data);\n    },\n\n    setUserToken(context, data) {\n      context.commit('setUserToken', data);\n    }\n\n  }\n});\nexport default store;","map":{"version":3,"sources":["D:/MySQL/pickup/client/src/store/index.js"],"names":["createStore","store","state","user_id","user_token","getters","getUserId","getUserToken","mutations","setUserId","data","setUserToken","actions","context","commit"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AAEA,MAAMC,KAAK,GAAGD,WAAW,CAAC;AACxB;AACAE,EAAAA,KAAK,GAAG;AACN,WAAO;AACLC,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,UAAU,EAAE;AAFP,KAAP;AAID,GAPuB;;AAQxB;AACAC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,CAACJ,KAAD,EAAQ;AACf,aAAOA,KAAK,CAACC,OAAb;AACD,KAHM;;AAIPI,IAAAA,YAAY,CAACL,KAAD,EAAQ;AAClB,aAAOA,KAAK,CAACE,UAAb;AACD;;AANM,GATe;AAiBxB;AACAI,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,CAACP,KAAD,EAAQQ,IAAR,EAAc;AACrBR,MAAAA,KAAK,CAACC,OAAN,GAAgBO,IAAI,CAACP,OAArB;AACD,KAHQ;;AAITQ,IAAAA,YAAY,CAACT,KAAD,EAAQQ,IAAR,EAAc;AACxBR,MAAAA,KAAK,CAACE,UAAN,GAAmBM,IAAI,CAACN,UAAxB;AACD;;AANQ,GAlBa;;AA0BxB;AACF;AACA;AACA;AACEQ,EAAAA,OAAO,EAAE;AACPH,IAAAA,SAAS,CAACI,OAAD,EAAUH,IAAV,EAAgB;AACvBG,MAAAA,OAAO,CAACC,MAAR,CAAe,WAAf,EAA4BJ,IAA5B;AACD,KAHM;;AAIPC,IAAAA,YAAY,CAACE,OAAD,EAAUH,IAAV,EAAgB;AAC1BG,MAAAA,OAAO,CAACC,MAAR,CAAe,cAAf,EAA+BJ,IAA/B;AACD;;AANM;AA9Be,CAAD,CAAzB;AAwCA,eAAeT,KAAf","sourcesContent":["import { createStore } from 'vuex';\n\nconst store = createStore({\n  // state is equivalent to data\n  state() {\n    return {\n      user_id: null,\n      user_token: null,\n    };\n  },\n  // getter is equivalent to computed property\n  getters: {\n    getUserId(state) {\n      return state.user_id;\n    },\n    getUserToken(state) {\n      return state.user_token;\n    }\n  },\n  // mutation is equivalent to method\n  mutations: {\n    setUserId(state, data) {\n      state.user_id = data.user_id;\n    },\n    setUserToken(state, data) {\n      state.user_token = data.user_token;\n    },\n  },\n  /**\n   * action is similar to events, we should not call mutations directly from our vue app\n   * we should always call the action that wraps the mutation to execute them\n   */\n  actions: {\n    setUserId(context, data) {\n      context.commit('setUserId', data);\n    },\n    setUserToken(context, data) {\n      context.commit('setUserToken', data);\n    }\n  }\n});\n\nexport default store;"]},"metadata":{},"sourceType":"module"}