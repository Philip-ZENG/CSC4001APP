{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"btn-group\"\n};\nconst _hoisted_2 = {\n  type: \"button\",\n  class: \"btn btn-danger dropdown-toggle\",\n  \"data-bs-toggle\": \"dropdown\",\n  \"aria-expanded\": \"false\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"dropdown-menu\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"li\", null, [/*#__PURE__*/_createElementVNode(\"a\", {\n  type: \"button\",\n  class: \"dropdown-item\"\n}, \"Delete\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"li\", null, [/*#__PURE__*/_createElementVNode(\"a\", {\n  type: \"button\",\n  class: \"dropdown-item\"\n}, \"Set As Manager\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = [_hoisted_4, _hoisted_5];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", _hoisted_2, _toDisplayString($props.memberName), 1\n  /* TEXT */\n  ), $options.showDropdown ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_3, _hoisted_6)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;AAEPC,MAAI,EAAC;AACLD,OAAK,EAAC;AACN,oBAAe;AACf,mBAAc;;;;AAIZA,OAAK,EAAC;;;gCACRE,oBAA0D,IAA1D,EAA0D,IAA1D,EAA0D,cAAtDA,oBAAiD,GAAjD,EAAiD;AAA9CD,MAAI,EAAC,QAAyC;AAAhCD,OAAK,EAAC;AAA0B,CAAjD,EAAuC,QAAvC,CAAsD,CAA1D;;AAAA;;gCACAE,oBAAkE,IAAlE,EAAkE,IAAlE,EAAkE,cAA9DA,oBAAyD,GAAzD,EAAyD;AAAtDD,MAAI,EAAC,QAAiD;AAAxCD,OAAK,EAAC;AAAkC,CAAzD,EAAuC,gBAAvC,CAA8D,CAAlE;;AAAA;;oBADAG,YACAC;;uBAXJC,oBAaM,KAbN,cAaM,CAZJH,oBAOS,QAPT,cAOSI,iBADJC,iBACI,CAPT,EAMe;AAAA;AANf,GAYI,EAJ4BC,uCAAhCH,oBAGK,IAHL,cAGKI,UAHL,sCAII,CAbN","names":["class","type","_createElementVNode","_hoisted_4","_hoisted_5","_createElementBlock","_toDisplayString","$props","$options","_hoisted_6"],"sourceRoot":"","sources":["D:\\MySQL\\pickup\\client\\src\\components\\ActivityManagement\\MemberItem.vue"],"sourcesContent":["<template>\n  <div class=\"btn-group\">\n    <button\n      type=\"button\"\n      class=\"btn btn-danger dropdown-toggle\"\n      data-bs-toggle=\"dropdown\"\n      aria-expanded=\"false\"\n    >\n      {{ memberName }}\n    </button>\n    <ul class=\"dropdown-menu\" v-if=\"showDropdown\">\n      <li><a type=\"button\" class=\"dropdown-item\">Delete</a></li>\n      <li><a type=\"button\" class=\"dropdown-item\">Set As Manager</a></li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    memberName: { type: String, required: true },\n    memberId: { type: Number, required: true },\n  },\n  inject: [\n    // Data\n    'userId', 'userRole',\n    // Methods\n    'deleteMember', 'changeManager',\n  ],\n  computed: {\n    /**\n     * @description\n     * Only show the dropdown(delete/change manager option) when the member iterm is not the user\n     */\n    showDropdown() {\n      return this.memberId === this.userId && this.userRole === 'MANAGER';\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}