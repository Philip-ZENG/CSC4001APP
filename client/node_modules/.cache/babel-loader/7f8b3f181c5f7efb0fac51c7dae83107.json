{"ast":null,"code":"import { createStore } from 'vuex';\nconst store = createStore({\n  // state is equivalent to data\n  state() {\n    return {\n      user_id: null,\n      user_token: null\n    };\n  },\n\n  // getter is equivalent to computed property\n  getters: {\n    getUserId(state) {\n      return state.user_id;\n    },\n\n    getUserToken(state) {\n      return state.user_token;\n    }\n\n  },\n  // mutation is equivalent to method\n  mutations: {\n    setUserId(state, data) {\n      state.user_id = data.user_id;\n    },\n\n    setUserToken(state, data) {\n      state.user_token = data.user_token;\n    }\n\n  },\n\n  /**\r\n   * action is similar to events, we should not call mutations directly from our vue app\r\n   * we should always call the action that wraps the mutation to execute them\r\n   */\n  actions: {\n    setUserId(context, data) {\n      context.commit('setUserId', data);\n    },\n\n    setUserToken(context, data) {\n      context.commit('setUserToken', data);\n    }\n\n  }\n});\nexport default store;","map":{"version":3,"sources":["D:/MySQL/pickup/client/src/store/index.js"],"names":["createStore","store","state","user_id","user_token","getters","getUserId","getUserToken","mutations","setUserId","data","setUserToken","actions","context","commit"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AAEA,MAAMC,KAAK,GAAGD,WAAW,CAAC;AACxB;AACAE,EAAAA,KAAK,GAAG;AACN,WAAO;AACLC,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,UAAU,EAAE;AAFP,KAAP;AAID,GAPuB;;AAQxB;AACAC,EAAAA,OAAO,EAAC;AACNC,IAAAA,SAAS,CAACJ,KAAD,EAAQ;AACf,aAAOA,KAAK,CAACC,OAAb;AACD,KAHK;;AAINI,IAAAA,YAAY,CAACL,KAAD,EAAQ;AAClB,aAAOA,KAAK,CAACE,UAAb;AACD;;AANK,GATgB;AAiBxB;AACAI,EAAAA,SAAS,EAAC;AACRC,IAAAA,SAAS,CAACP,KAAD,EAAQQ,IAAR,EAAc;AACrBR,MAAAA,KAAK,CAACC,OAAN,GAAgBO,IAAI,CAACP,OAArB;AACD,KAHO;;AAIRQ,IAAAA,YAAY,CAACT,KAAD,EAAQQ,IAAR,EAAc;AACxBR,MAAAA,KAAK,CAACE,UAAN,GAAmBM,IAAI,CAACN,UAAxB;AACD;;AANO,GAlBc;;AA0BxB;AACF;AACA;AACA;AACEQ,EAAAA,OAAO,EAAC;AACNH,IAAAA,SAAS,CAACI,OAAD,EAAUH,IAAV,EAAe;AACtBG,MAAAA,OAAO,CAACC,MAAR,CAAe,WAAf,EAA4BJ,IAA5B;AACD,KAHK;;AAINC,IAAAA,YAAY,CAACE,OAAD,EAAUH,IAAV,EAAe;AACzBG,MAAAA,OAAO,CAACC,MAAR,CAAe,cAAf,EAA+BJ,IAA/B;AACD;;AANK;AA9BgB,CAAD,CAAzB;AAwCA,eAAeT,KAAf","sourcesContent":["import { createStore } from 'vuex';\r\n\r\nconst store = createStore({\r\n  // state is equivalent to data\r\n  state() {\r\n    return {\r\n      user_id: null,\r\n      user_token: null,\r\n    }\r\n  },\r\n  // getter is equivalent to computed property\r\n  getters:{\r\n    getUserId(state) {\r\n      return state.user_id;\r\n    },\r\n    getUserToken(state) {\r\n      return state.user_token;\r\n    }\r\n  },\r\n  // mutation is equivalent to method\r\n  mutations:{\r\n    setUserId(state, data) {\r\n      state.user_id = data.user_id;\r\n    },\r\n    setUserToken(state, data) {\r\n      state.user_token = data.user_token;\r\n    },\r\n  },\r\n  /**\r\n   * action is similar to events, we should not call mutations directly from our vue app\r\n   * we should always call the action that wraps the mutation to execute them\r\n   */\r\n  actions:{\r\n    setUserId(context, data){\r\n      context.commit('setUserId', data);\r\n    },\r\n    setUserToken(context, data){\r\n      context.commit('setUserToken', data);\r\n    }\r\n  }\r\n});\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}