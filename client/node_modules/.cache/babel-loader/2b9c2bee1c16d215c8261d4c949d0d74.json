{"ast":null,"code":"const axios = require('axios').default;\n\nconst LOGIN_URL = 'http://localhost:4000/login';\nexport default {\n  name: 'LoginView',\n\n  data() {\n    return {\n      userAccount: null,\n      password: null,\n      loginStatus: false\n    };\n  },\n\n  methods: {\n    accountVerification() {\n      const account = this.userAccount;\n      const keyword = this.password;\n      axios.post(LOGIN_URL, {\n        userAccount: account,\n        password: keyword\n      });\n      axios.get(LOGIN_URL).then(results => {\n        this.loginStatus = results.data.verificationResult;\n      });\n    },\n\n    // Login successfully as user\n    userLogin() {\n      this.$store.dispatch('setIsLogIn');\n      this.$store.dispatch('setIsUser', {\n        isUser: true\n      });\n      this.$router.push('/userHome');\n    },\n\n    // login successfully as admin\n    adminLogin() {\n      this.$store.dispatch('setIsLogIn');\n      this.$store.dispatch('setIsUser', {\n        isUser: false\n      });\n      this.$router.push('/adminConsole');\n    },\n\n    // redirect to register page\n    goToRegister() {\n      this.$router.push('/register');\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA0BA,MAAMA,KAAI,GAAIC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEA,MAAMC,SAAQ,GAAI,6BAAlB;AAEA,eAAe;AACbC,MAAI,EAAE,WADO;;AAEbC,MAAI,GAAG;AACL,WAAO;AACLC,iBAAW,EAAE,IADR;AAELC,cAAQ,EAAE,IAFL;AAGLC,iBAAW,EAAE;AAHR,KAAP;AAKD,GARY;;AASbC,SAAO,EAAE;AACPC,uBAAmB,GAAG;AACpB,YAAMC,OAAM,GAAI,KAAKL,WAArB;AACA,YAAMM,OAAM,GAAI,KAAKL,QAArB;AACAP,WAAK,CAACa,IAAN,CAAWV,SAAX,EAAsB;AAAEG,mBAAW,EAAEK,OAAf;AAAwBJ,gBAAQ,EAAEK;AAAlC,OAAtB;AACAZ,WAAK,CAACc,GAAN,CAAUX,SAAV,EAAqBY,IAArB,CAA2BC,OAAD,IAAa;AACrC,aAAKR,WAAL,GAAmBQ,OAAO,CAACX,IAAR,CAAaY,kBAAhC;AACD,OAFD;AAGD,KARM;;AASP;AACAC,aAAS,GAAG;AACV,WAAKC,MAAL,CAAYC,QAAZ,CAAqB,YAArB;AACA,WAAKD,MAAL,CAAYC,QAAZ,CAAqB,WAArB,EAAkC;AAAEC,cAAM,EAAE;AAAV,OAAlC;AACA,WAAKC,OAAL,CAAaC,IAAb,CAAkB,WAAlB;AACD,KAdM;;AAeP;AACAC,cAAU,GAAG;AACX,WAAKL,MAAL,CAAYC,QAAZ,CAAqB,YAArB;AACA,WAAKD,MAAL,CAAYC,QAAZ,CAAqB,WAArB,EAAkC;AAAEC,cAAM,EAAE;AAAV,OAAlC;AACA,WAAKC,OAAL,CAAaC,IAAb,CAAkB,eAAlB;AACD,KApBM;;AAqBP;AACAE,gBAAY,GAAG;AACb,WAAKH,OAAL,CAAaC,IAAb,CAAkB,WAAlB;AACD;;AAxBM;AATI,CAAf","names":["axios","require","default","LOGIN_URL","name","data","userAccount","password","loginStatus","methods","accountVerification","account","keyword","post","get","then","results","verificationResult","userLogin","$store","dispatch","isUser","$router","push","adminLogin","goToRegister"],"sourceRoot":"","sources":["D:\\MySQL\\pickup\\client\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <section>\r\n    <div class=\"about\">\r\n      <h1>This is the Login page</h1>\r\n    </div>\r\n\r\n    <div class=\"userInput\">\r\n      <p>Email Address</p>\r\n      <input v-model=\"userAccount\" placeholder=\"Email\" />\r\n      <p>Password</p>\r\n      <input v-model=\"password\" placeholder=\"Password\" />\r\n      <p></p>\r\n      <button v-on:click=\"accountVerification\">Login</button>\r\n    </div>\r\n    <br>\r\n    <button @click=\"goToRegister\">GoToRegister</button>\r\n    <br>\r\n    <br>\r\n    <button @click=\"userLogin\">User Login</button>\r\n    <br>\r\n    <br>\r\n    <button @click=\"adminLogin\">Admin Login</button>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nconst axios = require('axios').default;\r\n\r\nconst LOGIN_URL = 'http://localhost:4000/login';\r\n\r\nexport default {\r\n  name: 'LoginView',\r\n  data() {\r\n    return {\r\n      userAccount: null,\r\n      password: null,\r\n      loginStatus: false,\r\n    };\r\n  },\r\n  methods: {\r\n    accountVerification() {\r\n      const account = this.userAccount;\r\n      const keyword = this.password;\r\n      axios.post(LOGIN_URL, { userAccount: account, password: keyword });\r\n      axios.get(LOGIN_URL).then((results) => {\r\n        this.loginStatus = results.data.verificationResult;\r\n      });\r\n    },\r\n    // Login successfully as user\r\n    userLogin() {\r\n      this.$store.dispatch('setIsLogIn');\r\n      this.$store.dispatch('setIsUser', { isUser: true });\r\n      this.$router.push('/userHome');\r\n    },\r\n    // login successfully as admin\r\n    adminLogin() {\r\n      this.$store.dispatch('setIsLogIn');\r\n      this.$store.dispatch('setIsUser', { isUser: false });\r\n      this.$router.push('/adminConsole');\r\n    },\r\n    // redirect to register page\r\n    goToRegister() {\r\n      this.$router.push('/register');\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}