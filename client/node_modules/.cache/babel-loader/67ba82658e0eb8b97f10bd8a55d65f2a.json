{"ast":null,"code":"export default {\n  props: {\n    memberName: {\n      type: String,\n      required: true\n    },\n    memberId: {\n      type: Number,\n      required: true\n    }\n  },\n  inject: [// Data\n  'userId', 'userRole', // Methods\n  'deleteMember', 'changeManager'],\n  computed: {\n    /**\r\n     * @description\r\n     * Only show the dropdown(delete/change manager option) when the member iterm is not the user\r\n     * And when the user is activity manager\r\n     */\n    showDropdown() {\n      return this.memberId === this.userId && this.userRole === 'MANAGER';\n    }\n\n  },\n  methods: {\n    /**\r\n     * @description\r\n     * Give the users' Manager authority/identity to others\r\n     */\n    modifyManager() {\n      // eslint-disable-next-line\n      if (confirm('Are you sure that you want to transfer your Manager identity to others?')) {\n        this.changeManager(this.memberId);\n      }\n    },\n\n    /**\r\n     * @description\r\n     * Delete a member from an activity with provided activity_id\r\n     */\n    deleteMember() {\n      // eslint-disable-next-line\n      if (confirm('Are you sure that you want to delete the member from this activity?')) {\n        this.deleteMember(this.memberId);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAwBA,eAAe;AACbA,OAAK,EAAE;AACLC,cAAU,EAAE;AAAEC,UAAI,EAAEC,MAAR;AAAgBC,cAAQ,EAAE;AAA1B,KADP;AAELC,YAAQ,EAAE;AAAEH,UAAI,EAAEI,MAAR;AAAgBF,cAAQ,EAAE;AAA1B;AAFL,GADM;AAKbG,QAAM,EAAE,CACN;AACA,UAFM,EAGN,UAHM,EAIN;AACA,gBALM,EAMN,eANM,CALK;AAabC,UAAQ,EAAE;AACR;;;;;AAKAC,gBAAY,GAAG;AACb,aAAO,KAAKJ,QAAL,KAAkB,KAAKK,MAAvB,IAAiC,KAAKC,QAAL,KAAkB,SAA1D;AACD;;AARO,GAbG;AAuBbC,SAAO,EAAE;AACP;;;;AAIAC,iBAAa,GAAG;AACd;AACA,UAAIC,OAAO,CAAC,yEAAD,CAAX,EAAwF;AACtF,aAAKC,aAAL,CAAmB,KAAKV,QAAxB;AACF;AACD,KAVM;;AAWP;;;;AAIAW,gBAAY,GAAG;AACb;AACA,UAAIF,OAAO,CAAC,qEAAD,CAAX,EAAoF;AAClF,aAAKE,YAAL,CAAkB,KAAKX,QAAvB;AACF;AACD;;AApBM;AAvBI,CAAf","names":["props","memberName","type","String","required","memberId","Number","inject","computed","showDropdown","userId","userRole","methods","modifyManager","confirm","changeManager","deleteMember"],"sourceRoot":"","sources":["D:\\MySQL\\pickup\\client\\src\\components\\ActivityManagement\\MemberItemForManager.vue"],"sourcesContent":["<template>\r\n  <div class=\"btn-group\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-primary dropdown-toggle\"\r\n      data-bs-toggle=\"dropdown\"\r\n      aria-expanded=\"false\"\r\n    >\r\n      {{ memberName }}\r\n    </button>\r\n    <ul class=\"dropdown-menu\">\r\n      <li>\r\n        <button class=\"dropdown-item\" @click=\"deleteMember\">Delete</button>\r\n      </li>\r\n      <li>\r\n        <button class=\"dropdown-item\" @click=\"modifyManager\">\r\n          Set As Manager\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    memberName: { type: String, required: true },\r\n    memberId: { type: Number, required: true },\r\n  },\r\n  inject: [\r\n    // Data\r\n    'userId',\r\n    'userRole',\r\n    // Methods\r\n    'deleteMember',\r\n    'changeManager',\r\n  ],\r\n  computed: {\r\n    /**\r\n     * @description\r\n     * Only show the dropdown(delete/change manager option) when the member iterm is not the user\r\n     * And when the user is activity manager\r\n     */\r\n    showDropdown() {\r\n      return this.memberId === this.userId && this.userRole === 'MANAGER';\r\n    },\r\n  },\r\n  methods: {\r\n    /**\r\n     * @description\r\n     * Give the users' Manager authority/identity to others\r\n     */\r\n    modifyManager() {\r\n      // eslint-disable-next-line\r\n      if (confirm('Are you sure that you want to transfer your Manager identity to others?')) {\r\n        this.changeManager(this.memberId);\r\n      }\r\n    },\r\n    /**\r\n     * @description\r\n     * Delete a member from an activity with provided activity_id\r\n     */\r\n    deleteMember() {\r\n      // eslint-disable-next-line\r\n      if (confirm('Are you sure that you want to delete the member from this activity?')) {\r\n        this.deleteMember(this.memberId);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}