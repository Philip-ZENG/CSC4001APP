{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"This is the Activity Management page \", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"h2\", null, \" The activity id is \" + _toDisplayString($data.activity_id), 1\n  /* TEXT */\n  ), _createElementVNode(\"h2\", null, \" The user id is \" + _toDisplayString($data.user_id), 1\n  /* TEXT */\n  )]), _createCommentVNode(\" dynamic components \"), _createElementVNode(\"template\", null, [(_openBlock(), _createBlock(_resolveDynamicComponent($options.console)))])]);\n}","map":{"version":3,"mappings":";;AAESA,OAAK,EAAC;;;gCACTC,oBAA8C,IAA9C,EAA8C,IAA9C,EAAI,uCAAJ,EAAyC;AAAA;AAAzC;;;uBAFJC,oBAUU,SAVV,EAUU,IAVV,EAUU,CATRD,oBAIM,KAJN,cAIM,CAHJE,UAGI,EAFJF,oBAA8C,IAA9C,EAA8C,IAA9C,EAAI,yBAAoBG,iBAAGC,iBAAH,CAAxB,EAAsC;AAAA;AAAtC,GAEI,EADJJ,oBAAsC,IAAtC,EAAsC,IAAtC,EAAI,qBAAgBG,iBAAGC,aAAH,CAApB,EAA8B;AAAA;AAA9B,GACI,CAJN,CASQ,EAJRC,2CAIQ,EAHRL,oBAEW,UAFX,EAEW,IAFX,EAEW,gBADTM,aAAqCC,yBAArBC,gBAAqB,CAArC,CACS,EAFX,CAGQ,CAVV","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","_toDisplayString","$data","_createCommentVNode","_createBlock","_resolveDynamicComponent","$options"],"sourceRoot":"","sources":["D:\\MySQL\\pickup\\client\\src\\views\\ActivityManagementView.vue"],"sourcesContent":["<template>\n  <section>\n    <div class=\"home\">\n      <h1>This is the Activity Management page </h1>\n      <h2> The activity id is {{ activity_id }}</h2>\n      <h2> The user id is {{ user_id }}</h2>\n    </div>\n    <!-- dynamic components -->\n    <template>\n      <component :is=\"console\"></component>\n    </template>\n  </section>\n</template>\n\n<script>\nimport ManagerConsole from '../components/ActivityManagement/ManagerConsole.vue';\nimport MemberConsole from '../components/ActivityManagement/MemberConsole.vue';\n\nconst axios = require('axios').default;\n\nconst ACTIVITY_INFO_URL = 'http://localhost:4000/getActivityInfo';\nconst USER_ROLE = 'http://localhost:4000/getUserRole';\nconst QUIT_ACTIVITY = 'http://localhost:4000/quitActivity';\n\nexport default {\n  components: {\n    'manager-console': ManagerConsole,\n    'member-console': MemberConsole,\n  },\n  data() {\n    return {\n      activity_id: null,\n      user_id: null,\n      activity_info: [],\n      user_role: '',\n    };\n  },\n  provide() {\n    return {\n      activity_info: this.activity_info,\n    };\n  },\n  created() {\n    // get the route parameter 'id' from router\n    this.activity_id = this.$route.params.activity_id;\n    this.user_id = this.$route.params.user_id;\n  },\n  methods: {\n    /**\n     * @description\n     * Return activity info of a specific activity with the provided activity_id\n     */\n    getActivityInfo() {\n      axios.post(ACTIVITY_INFO_URL, { activity_id: this.activity_id })\n        .then((response) => {\n          this.activity_info.push(response.data);\n        });\n    },\n    /**\n     * @description\n     * Return the role of a user with the provided activity_id and user_id\n     */\n    getUserRole() {\n      axios.post(USER_ROLE, { activity_id: this.activity_id, user_id: this.user_id })\n        .then((response) => {\n          this.user_role = response.data.role;\n        });\n    },\n    /**\n     * @description\n     * Quit from the activity with provided activity_id and user_id\n     */\n    quitActivity() {\n       axios.post(QUIT_ACTIVITY, { activity_id: this.activity_id, user_id: this.user_id })\n    },\n  },\n  computed: {\n    console() {\n      if (this.user_role === 'MANAGER') {\n        return 'manager-console';\n      }\n      return 'member-console';\n    },\n  },\n  mounted() {\n    this.getActivityInfo();\n    this.getUserRole();\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}