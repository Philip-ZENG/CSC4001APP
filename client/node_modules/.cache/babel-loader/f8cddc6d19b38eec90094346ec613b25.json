{"ast":null,"code":"export default {\n  props: {\n    memberName: {\n      type: String,\n      required: true\n    },\n    memberId: {\n      type: Number,\n      required: true\n    }\n  },\n  inject: [// Data\n  'userId', 'userRole', // Methods\n  'deleteMember', 'changeManager'],\n  computed: {\n    /**\n     * @description\n     * Only show the dropdown(delete/change manager option) when the member iterm is not the user\n     * And when the user is activity manager\n     */\n    showDropdown() {\n      return this.memberId === this.userId && this.userRole === 'MANAGER';\n    }\n\n  },\n  methods: {\n    /**\n     * @description\n     * Give the users' Manager authority/identity to others\n     */\n    modifyManager() {\n      // eslint-disable-next-line\n      if (confirm('Are you sure that you want to transfer your Manager identity to others?')) {\n        this.changeManager(this.memberId);\n      }\n    },\n\n    /**\n     * @description\n     * Delete a member from an activity with provided activity_id\n     */\n    deleteMember() {\n      // eslint-disable-next-line\n      if (confirm('Are you sure that you want to delete the member from this activity?')) {\n        this.deleteMember(this.memberId);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAwBA,eAAe;AACbA,OAAK,EAAE;AACLC,cAAU,EAAE;AAAEC,UAAI,EAAEC,MAAR;AAAgBC,cAAQ,EAAE;AAA1B,KADP;AAELC,YAAQ,EAAE;AAAEH,UAAI,EAAEI,MAAR;AAAgBF,cAAQ,EAAE;AAA1B;AAFL,GADM;AAKbG,QAAM,EAAE,CACN;AACA,UAFM,EAGN,UAHM,EAIN;AACA,gBALM,EAMN,eANM,CALK;AAabC,UAAQ,EAAE;AACR;;;;;AAKAC,gBAAY,GAAG;AACb,aAAO,KAAKJ,QAAL,KAAkB,KAAKK,MAAvB,IAAiC,KAAKC,QAAL,KAAkB,SAA1D;AACD;;AARO,GAbG;AAuBbC,SAAO,EAAE;AACP;;;;AAIAC,iBAAa,GAAG;AACd;AACA,UAAIC,OAAO,CAAC,yEAAD,CAAX,EAAwF;AACtF,aAAKC,aAAL,CAAmB,KAAKV,QAAxB;AACF;AACD,KAVM;;AAWP;;;;AAIAW,gBAAY,GAAG;AACb;AACA,UAAIF,OAAO,CAAC,qEAAD,CAAX,EAAoF;AAClF,aAAKE,YAAL,CAAkB,KAAKX,QAAvB;AACF;AACD;;AApBM;AAvBI,CAAf","names":["props","memberName","type","String","required","memberId","Number","inject","computed","showDropdown","userId","userRole","methods","modifyManager","confirm","changeManager","deleteMember"],"sourceRoot":"","sources":["D:\\MySQL\\CSC4001APP-1ebfbd75b3d9358c35ceef756d2c17d6ea52af3f\\client\\src\\components\\ActivityManagement\\MemberItemForManager.vue"],"sourcesContent":["<template>\n  <div class=\"btn-group\">\n    <button\n      type=\"button\"\n      class=\"btn btn-primary dropdown-toggle\"\n      data-bs-toggle=\"dropdown\"\n      aria-expanded=\"false\"\n    >\n      {{ memberName }}\n    </button>\n    <ul class=\"dropdown-menu\">\n      <li>\n        <button class=\"dropdown-item\" @click=\"deleteMember\">Delete</button>\n      </li>\n      <li>\n        <button class=\"dropdown-item\" @click=\"modifyManager\">\n          Set As Manager\n        </button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    memberName: { type: String, required: true },\n    memberId: { type: Number, required: true },\n  },\n  inject: [\n    // Data\n    'userId',\n    'userRole',\n    // Methods\n    'deleteMember',\n    'changeManager',\n  ],\n  computed: {\n    /**\n     * @description\n     * Only show the dropdown(delete/change manager option) when the member iterm is not the user\n     * And when the user is activity manager\n     */\n    showDropdown() {\n      return this.memberId === this.userId && this.userRole === 'MANAGER';\n    },\n  },\n  methods: {\n    /**\n     * @description\n     * Give the users' Manager authority/identity to others\n     */\n    modifyManager() {\n      // eslint-disable-next-line\n      if (confirm('Are you sure that you want to transfer your Manager identity to others?')) {\n        this.changeManager(this.memberId);\n      }\n    },\n    /**\n     * @description\n     * Delete a member from an activity with provided activity_id\n     */\n    deleteMember() {\n      // eslint-disable-next-line\n      if (confirm('Are you sure that you want to delete the member from this activity?')) {\n        this.deleteMember(this.memberId);\n      }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}