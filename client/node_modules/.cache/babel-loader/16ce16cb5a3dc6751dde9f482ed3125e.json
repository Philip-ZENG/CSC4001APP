{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"This is the Activity Management page \", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"h2\", null, \" The activity id is \" + _toDisplayString($data.activity_id), 1\n  /* TEXT */\n  ), _createElementVNode(\"h2\", null, \" The user id is \" + _toDisplayString($data.user_id), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;gCACTC,oBAA8C,IAA9C,EAA8C,IAA9C,EAAI,uCAAJ,EAAyC;AAAA;AAAzC;;;uBADFC,oBAIM,KAJN,cAIM,CAHJC,UAGI,EAFJF,oBAA8C,IAA9C,EAA8C,IAA9C,EAAI,yBAAoBG,iBAAGC,iBAAH,CAAxB,EAAsC;AAAA;AAAtC,GAEI,EADJJ,oBAAsC,IAAtC,EAAsC,IAAtC,EAAI,qBAAgBG,iBAAGC,aAAH,CAApB,EAA8B;AAAA;AAA9B,GACI,CAJN","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","_toDisplayString","$data"],"sourceRoot":"","sources":["D:\\MySQL\\pickup\\client\\src\\views\\ActivityManagementView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <h1>This is the Activity Management page </h1>\n    <h2> The activity id is {{ activity_id }}</h2>\n    <h2> The user id is {{ user_id }}</h2>\n  </div>\n</template>\n\n<script>\nconst axios = require('axios').default;\nimport ManagerConsole from '../components/ActivityManagement/ManagerConsole.vue';\nimport MemberConsole from '../components/ActivityManagement/MemberConsole.vue';\n\nconst ACTIVITY_INFO_URL = 'http://localhost:4000/getActivityInfo';\nconst USER_ROLE = 'http://localhost:4000/getUserRole';\n\nexport default {\n  components:{\n    'manager-console' : ManagerConsole,\n    'member-console': MemberConsole,\n  },\n  data() {\n    return {\n      activity_id: null,\n      user_id: null,\n      activity_info: [],\n      user_role: '',\n    };\n  },\n  created() {\n    // get the route parameter 'id' from router\n    this.activity_id = this.$route.params.activity_id;\n    this.user_id = this.$route.params.user_id;\n  },\n  methods: {\n    /**\n     * @description\n     * Return activity info of a specific activity with the provided activity_id\n     */\n    getActivityInfo() {\n      axios.post(ACTIVITY_INFO_URL, { activity_id: this.activity_id })\n        .then((response) => {\n          this.activity_info.push(response.data);\n        });\n    },\n    /**\n     * @description\n     * Return the role of a user with the provided activity_id and user_id\n     */\n    getUserRole() {\n      axios.post(USER_ROLE, { activity_id: this.activity_id, user_id: this.user_id })\n        .then((response) => {\n          console.log(response);\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}