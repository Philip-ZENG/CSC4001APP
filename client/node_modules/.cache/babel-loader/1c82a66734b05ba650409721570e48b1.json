{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"home mt-3\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \" My Activity List\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  class: \"container mt-3\",\n  style: {\n    \"align\": \"center\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_activity_list_title = _resolveComponent(\"activity-list-title\");\n\n  const _component_activity_list = _resolveComponent(\"activity-list\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_activity_list_title), _createVNode(_component_activity_list)])]);\n}","map":{"version":3,"mappings":";;gCAEEA,oBAEM,KAFN,EAEM;AAFDC,OAAK,EAAC;AAEL,CAFN,EAAsB,cACpBD,oBAA0B,IAA1B,EAA0B,IAA1B,EAAI,mBAAJ,CADoB,CAAtB;;AAAA;;;AAGKC,OAAK,EAAC;AAAiBC,OAAsB,EAAtB;AAAA;AAAA;;;;;;;uBAJ9BC,oBAQM,KARN,EAQM,IARN,EAQM,CAPJC,UAOI,EAJJJ,oBAGM,KAHN,cAGM,CAFJK,aAA2CC,8BAA3C,CAEI,EADJD,aAA+BE,wBAA/B,CACI,CAHN,CAII,CARN","names":["_createElementVNode","class","style","_createElementBlock","_hoisted_1","_createVNode","_component_activity_list_title","_component_activity_list"],"sourceRoot":"","sources":["D:\\MySQL\\pickup\\client\\src\\views\\ActivityListView.vue"],"sourcesContent":["<template>\r\n<div>\r\n  <div class=\"home mt-3\">\r\n    <h1> My Activity List</h1>\r\n  </div>\r\n  <div class=\"container mt-3\" style=\"align: center;\">\r\n    <activity-list-title></activity-list-title>\r\n    <activity-list></activity-list>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport ActivityList from '../components/ActivityList/ActivityList.vue';\r\nimport ActivityListTitle from '../components/ActivityList/ActivityListTitle.vue';\r\n\r\nconst axios = require('axios').default;\r\n\r\nconst ACTIVITY_INFO_URL = 'http://localhost:4000/getActivityInfo';\r\n\r\nexport default {\r\n  components: {\r\n    'activity-list-title': ActivityListTitle,\r\n    'activity-list': ActivityList,\r\n  },\r\n  data() {\r\n    return {\r\n      user_id: 8,\r\n    };\r\n  },\r\n  provide() {\r\n    return {\r\n      ACTIVITY_ID_LIST: null, // The list of activity id of a user\r\n      ACTIVITY_DATA: [\r\n        {\r\n          activity_id: 1,\r\n          title: 'a',\r\n          time: '2021-08-09T21:00:20.000Z',\r\n          location: 'San Jose',\r\n          description: 'migration green Coves',\r\n          max_capacity: 7,\r\n          quota_left: 3,\r\n          type: 'GroupShoping',\r\n          heat: 88,\r\n        },\r\n        {\r\n          activity_id: 4,\r\n          title: 'd',\r\n          time: '2021-04-29T12:46:20.000Z',\r\n          location: 'Tustin',\r\n          description: 'Checking Arkansas quantifying',\r\n          max_capacity: 7,\r\n          quota_left: 2,\r\n          type: 'Travel',\r\n          heat: 72,\r\n        },\r\n      ], // Stores all the activity information of a user\r\n    };\r\n  },\r\n  methods: {\r\n    /**\r\n     * @description\r\n     * Loads all the activity information of a user with given user_id\r\n     * Data is loaded into the local variable ACTIVITY_ID_LIST & ACTIVITY_DATA\r\n     * @var ID_LIST_INDEX @var DATA_INDEX\r\n     * Data package is sent in the form: {[ACTIVITY_ID_LIST],[ACTIVITY_DATA]}\r\n     * @param {*} callback\r\n     * This callback function is used to pass data from async function\r\n     */\r\n    loadActivityRecord(callback) {\r\n      axios.post(ACTIVITY_INFO_URL, { user_id: this.user_id })\r\n        .then((response) => {\r\n          const ID_LIST_INDEX = 0;\r\n          const DATA_INDEX = 1;\r\n          this.ACTIVITY_DATA = response.data[DATA_INDEX];\r\n          this.ACTIVITY_ID_LIST = response.data[ID_LIST_INDEX];\r\n          return callback();\r\n        });\r\n    },\r\n    /**\r\n     * @description\r\n     * Call functions to load data into local memory\r\n     * TODO We need to load data into the local memory FIRST and then render the page\r\n     */\r\n    renderPage() {\r\n      const self = this;\r\n      const myPromise1 = function () {\r\n        return new Promise((resolve) => {\r\n          self.loadActivityRecord(() => {\r\n            resolve();\r\n          });\r\n        });\r\n      };\r\n      myPromise1()\r\n        .then(() => {\r\n          console.log(this.ACTIVITY_ID_LIST);\r\n          console.log(this.ACTIVITY_DATA);\r\n        });\r\n    },\r\n  },\r\n  // lIFE Cycle mounted, will be executed after app setup\r\n  mounted() {\r\n    this.renderPage();\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.save_button {\r\n  min-width: 110px;\r\n  max-width: 110px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}