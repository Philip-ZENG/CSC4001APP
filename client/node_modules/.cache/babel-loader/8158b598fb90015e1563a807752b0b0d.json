{"ast":null,"code":"/**\n * @description\n * This is an activity card component, used to display information of a specific component\n */\nexport default {\n  /**\n   * @var state\n   * Has two value 'ACTIVE' and 'INACTIVE'\n   * Used to notify whether the activity is posted or stored as drafts\n   * @var action\n   * Has two value 'Deactivate' and 'Activate'\n   * Used to post an activity or pull back an activity\n   */\n  props: {\n    activity_id: {\n      type: Number,\n      required: true\n    },\n    title: {\n      type: String,\n      required: true\n    },\n    time: {\n      type: String,\n      required: true\n    },\n    quota_left: {\n      type: Number,\n      required: true\n    },\n    state: {\n      type: String,\n      default: 'ACTIVE'\n    },\n    action: {\n      type: String,\n      default: 'Deactivate'\n    }\n  },\n  inject: ['userId'],\n  methods: {\n    /**\n     * @description\n     * Redirect to the activity management page\n     */\n    toActivityManagement() {\n      // eslint-disable-next-line\n      const targetPath = '/activityManagement/user_id=' + this.userId + '/activity_id=' + this.activity_id;\n      this.$router.push(targetPath);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA0BA;;;;AAIA,eAAe;AACb;;;;;;;;AAQAA,OAAK,EAAE;AACLC,eAAW,EAAE;AAAEC,UAAI,EAAEC,MAAR;AAAgBC,cAAQ,EAAE;AAA1B,KADR;AAELC,SAAK,EAAE;AAAEH,UAAI,EAAEI,MAAR;AAAgBF,cAAQ,EAAE;AAA1B,KAFF;AAGLG,QAAI,EAAE;AAAEL,UAAI,EAAEI,MAAR;AAAgBF,cAAQ,EAAE;AAA1B,KAHD;AAILI,cAAU,EAAE;AAAEN,UAAI,EAAEC,MAAR;AAAgBC,cAAQ,EAAE;AAA1B,KAJP;AAKLK,SAAK,EAAE;AAAEP,UAAI,EAAEI,MAAR;AAAgBI,aAAO,EAAE;AAAzB,KALF;AAMLC,UAAM,EAAE;AAAET,UAAI,EAAEI,MAAR;AAAgBI,aAAO,EAAE;AAAzB;AANH,GATM;AAiBbE,QAAM,EAAE,CAAC,QAAD,CAjBK;AAkBbC,SAAO,EAAE;AACP;;;;AAIAC,wBAAoB,GAAG;AACrB;AACA,YAAMC,UAAS,GAAI,iCAAiC,KAAKC,MAAtC,GAA+C,eAA/C,GAAiE,KAAKf,WAAzF;AACA,WAAKgB,OAAL,CAAaC,IAAb,CAAkBH,UAAlB;AACD;;AATM;AAlBI,CAAf","names":["props","activity_id","type","Number","required","title","String","time","quota_left","state","default","action","inject","methods","toActivityManagement","targetPath","userId","$router","push"],"sourceRoot":"","sources":["D:\\MySQL\\pickup\\client\\src\\components\\ActivityList\\ActivityListCard.vue"],"sourcesContent":["<template>\n  <div class=\"card mt-2\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <h4>{{ title }}</h4>\n      </div>\n      <div class=\"col\">\n        <h4>{{ time }}</h4>\n      </div>\n      <div class=\"col\">\n        <h4>{{ quota_left }}</h4>\n      </div>\n      <div class=\"col\">\n        <button\n          class=\"btn btn-primary\"\n          type=\"button\"\n          @click=\"toActivityManagement\"\n        >\n          Detail\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/**\n * @description\n * This is an activity card component, used to display information of a specific component\n */\nexport default {\n  /**\n   * @var state\n   * Has two value 'ACTIVE' and 'INACTIVE'\n   * Used to notify whether the activity is posted or stored as drafts\n   * @var action\n   * Has two value 'Deactivate' and 'Activate'\n   * Used to post an activity or pull back an activity\n   */\n  props: {\n    activity_id: { type: Number, required: true },\n    title: { type: String, required: true },\n    time: { type: String, required: true },\n    quota_left: { type: Number, required: true },\n    state: { type: String, default: 'ACTIVE' },\n    action: { type: String, default: 'Deactivate' },\n  },\n  inject: ['userId'],\n  methods: {\n    /**\n     * @description\n     * Redirect to the activity management page\n     */\n    toActivityManagement() {\n      // eslint-disable-next-line\n      const targetPath = '/activityManagement/user_id=' + this.userId + '/activity_id=' + this.activity_id;\n      this.$router.push(targetPath);\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}