{"ast":null,"code":"import managementConsole from '../components/ActivityManagement/ManagementConsole.vue';\n\nconst axios = require('axios').default;\n\nconst ACTIVITY_INFO_URL = 'http://localhost:4000/getActivityInfo';\nconst USER_ROLE = 'http://localhost:4000/getUserRole';\nconst DELETE_MEMBER = 'http://localhost:4000/quitActivity';\nexport default {\n  components: {\n    'management-console': managementConsole\n  },\n\n  data() {\n    return {\n      activity_id: null,\n      user_id: null,\n      user_role: '',\n      ACTIVITY_INFO: [],\n      MEMBER_ID: [],\n      MEMBER_INFO: []\n    };\n  },\n\n  provide() {\n    return {\n      userId: this.user_id,\n      userRole: this.user_role,\n      activityInfo: this.ACTIVITY_INFO,\n      deleteMember: this.deleteMember,\n      memberId: this.memberId,\n      memberInfo: this.memberInfo\n    };\n  },\n\n  created() {\n    // get the route parameter 'id' from router\n    this.activity_id = this.$route.params.activity_id;\n    this.user_id = this.$route.params.user_id;\n  },\n\n  methods: {\n    /**\n     * @description\n     * Return activity info of a specific activity with the provided activity_id\n     */\n    getActivityInfo() {\n      axios.post(ACTIVITY_INFO_URL, {\n        activity_id: this.activity_id\n      }).then(response => {\n        this.ACTIVITY_INFO.push(response.data);\n      });\n    },\n\n    /**\n     * @description\n     * Return the role of a user with the provided activity_id and user_id\n     */\n    getUserRole() {\n      axios.post(USER_ROLE, {\n        activity_id: this.activity_id,\n        user_id: this.user_id\n      }).then(response => {\n        this.user_role = response.data.role;\n      });\n    },\n\n    /**\n     * @description\n     * Quit from the activity with provided activity_id and user_id\n     */\n    deleteMember(userId) {\n      axios.post(DELETE_MEMBER, {\n        activity_id: this.activity_id,\n        user_id: userId\n      });\n    }\n\n  },\n\n  mounted() {\n    this.getActivityInfo();\n    this.getUserRole();\n  }\n\n};","map":{"version":3,"mappings":"AAYA,OAAOA,iBAAP,MAA8B,wDAA9B;;AAEA,MAAMC,KAAI,GAAIC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEA,MAAMC,iBAAgB,GAAI,uCAA1B;AACA,MAAMC,SAAQ,GAAI,mCAAlB;AACA,MAAMC,aAAY,GAAI,oCAAtB;AAEA,eAAe;AACbC,YAAU,EAAE;AACV,0BAAsBP;AADZ,GADC;;AAIbQ,MAAI,GAAG;AACL,WAAO;AACLC,iBAAW,EAAE,IADR;AAELC,aAAO,EAAE,IAFJ;AAGLC,eAAS,EAAE,EAHN;AAILC,mBAAa,EAAE,EAJV;AAKLC,eAAS,EAAE,EALN;AAMLC,iBAAW,EAAE;AANR,KAAP;AAQD,GAbY;;AAcbC,SAAO,GAAG;AACR,WAAO;AACLC,YAAM,EAAE,KAAKN,OADR;AAELO,cAAQ,EAAE,KAAKN,SAFV;AAGLO,kBAAY,EAAE,KAAKN,aAHd;AAILO,kBAAY,EAAE,KAAKA,YAJd;AAKLC,cAAQ,EAAE,KAAKA,QALV;AAMLC,gBAAU,EAAE,KAAKA;AANZ,KAAP;AAQD,GAvBY;;AAwBbC,SAAO,GAAG;AACR;AACA,SAAKb,WAAL,GAAmB,KAAKc,MAAL,CAAYC,MAAZ,CAAmBf,WAAtC;AACA,SAAKC,OAAL,GAAe,KAAKa,MAAL,CAAYC,MAAZ,CAAmBd,OAAlC;AACD,GA5BY;;AA6Bbe,SAAO,EAAE;AACP;;;;AAIAC,mBAAe,GAAG;AAChBzB,WAAK,CAAC0B,IAAN,CAAWvB,iBAAX,EAA8B;AAAEK,mBAAW,EAAE,KAAKA;AAApB,OAA9B,EACGmB,IADH,CACSC,QAAD,IAAc;AAClB,aAAKjB,aAAL,CAAmBkB,IAAnB,CAAwBD,QAAQ,CAACrB,IAAjC;AACD,OAHH;AAID,KAVM;;AAWP;;;;AAIAuB,eAAW,GAAG;AACZ9B,WAAK,CAAC0B,IAAN,CAAWtB,SAAX,EAAsB;AAAEI,mBAAW,EAAE,KAAKA,WAApB;AAAiCC,eAAO,EAAE,KAAKA;AAA/C,OAAtB,EACGkB,IADH,CACSC,QAAD,IAAc;AAClB,aAAKlB,SAAL,GAAiBkB,QAAQ,CAACrB,IAAT,CAAcwB,IAA/B;AACD,OAHH;AAID,KApBM;;AAqBP;;;;AAIAb,gBAAY,CAACH,MAAD,EAAS;AACnBf,WAAK,CAAC0B,IAAN,CAAWrB,aAAX,EAA0B;AAAEG,mBAAW,EAAE,KAAKA,WAApB;AAAiCC,eAAO,EAAEM;AAA1C,OAA1B;AACD;;AA3BM,GA7BI;;AA0DbiB,SAAO,GAAG;AACR,SAAKP,eAAL;AACA,SAAKK,WAAL;AACD;;AA7DY,CAAf","names":["managementConsole","axios","require","default","ACTIVITY_INFO_URL","USER_ROLE","DELETE_MEMBER","components","data","activity_id","user_id","user_role","ACTIVITY_INFO","MEMBER_ID","MEMBER_INFO","provide","userId","userRole","activityInfo","deleteMember","memberId","memberInfo","created","$route","params","methods","getActivityInfo","post","then","response","push","getUserRole","role","mounted"],"sourceRoot":"","sources":["D:\\MySQL\\pickup\\client\\src\\views\\ActivityManagementView.vue"],"sourcesContent":["<template>\n  <section>\n    <div class=\"home\">\n      <h1>This is the Activity Management page </h1>\n      <h2> The activity id is {{ activity_id }}</h2>\n      <h2> The user id is {{ user_id }}</h2>\n    </div>\n    <management-console></management-console>\n  </section>\n</template>\n\n<script>\nimport managementConsole from '../components/ActivityManagement/ManagementConsole.vue';\n\nconst axios = require('axios').default;\n\nconst ACTIVITY_INFO_URL = 'http://localhost:4000/getActivityInfo';\nconst USER_ROLE = 'http://localhost:4000/getUserRole';\nconst DELETE_MEMBER = 'http://localhost:4000/quitActivity';\n\nexport default {\n  components: {\n    'management-console': managementConsole,\n  },\n  data() {\n    return {\n      activity_id: null,\n      user_id: null,\n      user_role: '',\n      ACTIVITY_INFO: [],\n      MEMBER_ID: [],\n      MEMBER_INFO: [],\n    };\n  },\n  provide() {\n    return {\n      userId: this.user_id,\n      userRole: this.user_role,\n      activityInfo: this.ACTIVITY_INFO,\n      deleteMember: this.deleteMember,\n      memberId: this.memberId,\n      memberInfo: this.memberInfo,\n    };\n  },\n  created() {\n    // get the route parameter 'id' from router\n    this.activity_id = this.$route.params.activity_id;\n    this.user_id = this.$route.params.user_id;\n  },\n  methods: {\n    /**\n     * @description\n     * Return activity info of a specific activity with the provided activity_id\n     */\n    getActivityInfo() {\n      axios.post(ACTIVITY_INFO_URL, { activity_id: this.activity_id })\n        .then((response) => {\n          this.ACTIVITY_INFO.push(response.data);\n        });\n    },\n    /**\n     * @description\n     * Return the role of a user with the provided activity_id and user_id\n     */\n    getUserRole() {\n      axios.post(USER_ROLE, { activity_id: this.activity_id, user_id: this.user_id })\n        .then((response) => {\n          this.user_role = response.data.role;\n        });\n    },\n    /**\n     * @description\n     * Quit from the activity with provided activity_id and user_id\n     */\n    deleteMember(userId) {\n      axios.post(DELETE_MEMBER, { activity_id: this.activity_id, user_id: userId });\n    },\n  },\n  mounted() {\n    this.getActivityInfo();\n    this.getUserRole();\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}