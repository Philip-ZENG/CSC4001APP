{"ast":null,"code":"import { Swiper, SwiperSlide } from 'vue-awesome-swiper';\nimport Datepicker from 'vuejs3-datepicker';\nimport ActivityCard from '../components/Home/ActivityCard.vue';\n\nconst axios = require('axios').default;\n\nexport default {\n  components: {\n    Swiper,\n    SwiperSlide,\n    Datepicker,\n    'activity-card': ActivityCard\n  },\n\n  data() {\n    return {\n      searchOrder: '',\n      searchType: 'type',\n      actInformation: [],\n      // store the activity information\n      page: 0,\n      // store the page number\n      userInput: '',\n      // store the user's input for searching\n      userPage: null,\n      // the page number user want to view\n      minNum: null,\n      maxNum: null\n    };\n  },\n\n  computed: {\n    totalActivityNum() {\n      return this.actInformation.length;\n    },\n\n    numOfPages() {\n      const temp = Math.floor(this.totalActivityNum / 12);\n      const res = this.totalActivityNum % 12;\n\n      if (res === 0) {\n        return temp;\n      }\n\n      return temp + 1;\n    },\n\n    shownActivity() {\n      const res = [];\n\n      if (this.page * 12 + 12 > this.actInformation.length) {\n        for (let i = this.page * 12; i < this.actInformation.length; i += 1) {\n          res.push(this.actInformation[i]);\n        }\n      } else {\n        for (let i = 0; i < 12; i += 1) {\n          res.push(this.actInformation[this.page * 12 + i]);\n        }\n      }\n\n      console.log(res);\n      return res;\n    }\n\n  },\n  methods: {\n    switchTo(path) {\n      this.$router.replace(path);\n    },\n\n    searchActivity() {\n      axios.post('http://localhost:4000/searchActivity', {\n        searchType: this.searchType,\n        userInput: this.userInput\n      }).then(response => {\n        this.actInformation = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    askInfo() {\n      axios.post('http://localhost:4000/getActivityInfo').then(response => {\n        this.actInformation = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n  },\n\n  mounted() {\n    this.askInfo();\n  }\n\n};","map":{"version":3,"mappings":"AAwEA,SAASA,MAAT,EAAiBC,WAAjB,QAAoC,oBAApC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;;AAEA,MAAMC,KAAI,GAAIC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEA,eAAe;AACbC,YAAU,EAAE;AACVP,UADU;AAEVC,eAFU;AAGVC,cAHU;AAIV,qBAAiBC;AAJP,GADC;;AAQbK,MAAI,GAAG;AACL,WAAO;AACLC,iBAAW,EAAE,EADR;AAELC,gBAAU,EAAE,MAFP;AAGLC,oBAAc,EAAE,EAHX;AAGe;AACpBC,UAAI,EAAE,CAJD;AAII;AACTC,eAAS,EAAE,EALN;AAKU;AACfC,cAAQ,EAAE,IANL;AAMW;AAChBC,YAAM,EAAE,IAPH;AAQLC,YAAM,EAAE;AARH,KAAP;AAUD,GAnBY;;AAqBbC,UAAQ,EAAE;AACRC,oBAAgB,GAAG;AACjB,aAAO,KAAKP,cAAL,CAAoBQ,MAA3B;AACD,KAHO;;AAKRC,cAAU,GAAG;AACX,YAAMC,IAAG,GAAIC,IAAI,CAACC,KAAL,CAAW,KAAKL,gBAAL,GAAwB,EAAnC,CAAb;AACA,YAAMM,GAAE,GAAI,KAAKN,gBAAL,GAAwB,EAApC;;AACA,UAAIM,GAAE,KAAM,CAAZ,EAAe;AACb,eAAOH,IAAP;AACF;;AACA,aAAOA,IAAG,GAAI,CAAd;AACD,KAZO;;AAcRI,iBAAa,GAAG;AACd,YAAMD,GAAE,GAAI,EAAZ;;AACA,UAAI,KAAKZ,IAAL,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,KAAKD,cAAL,CAAoBQ,MAA9C,EAAsD;AACpD,aAAK,IAAIO,IAAI,KAAKd,IAAL,GAAY,EAAzB,EAA6Bc,IAAI,KAAKf,cAAL,CAAoBQ,MAArD,EAA6DO,KAAK,CAAlE,EAAqE;AACnEF,aAAG,CAACG,IAAJ,CAAS,KAAKhB,cAAL,CAAoBe,CAApB,CAAT;AACF;AACF,OAJA,MAIO;AACL,aAAK,IAAIA,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,KAAK,CAA7B,EAAgC;AAC9BF,aAAG,CAACG,IAAJ,CAAS,KAAKhB,cAAL,CAAoB,KAAKC,IAAL,GAAY,EAAZ,GAAiBc,CAArC,CAAT;AACF;AACF;;AACAE,aAAO,CAACC,GAAR,CAAYL,GAAZ;AACA,aAAOA,GAAP;AACD;;AA3BO,GArBG;AAmDbM,SAAO,EAAE;AACPC,YAAQ,CAACC,IAAD,EAAO;AACb,WAAKC,OAAL,CAAaC,OAAb,CAAqBF,IAArB;AACD,KAHM;;AAKPG,kBAAc,GAAG;AACf/B,WAAK,CAACgC,IAAN,CACE,sCADF,EAEE;AAAE1B,kBAAU,EAAE,KAAKA,UAAnB;AAA+BG,iBAAS,EAAE,KAAKA;AAA/C,OAFF,EAIGwB,IAJH,CAISC,QAAD,IAAc;AAClB,aAAK3B,cAAL,GAAsB2B,QAAQ,CAAC9B,IAA/B;AACD,OANH,EAOG+B,KAPH,CAOUC,KAAD,IAAW;AAChBZ,eAAO,CAACC,GAAR,CAAYW,KAAZ;AACD,OATH;AAUD,KAhBM;;AAkBPC,WAAO,GAAG;AACRrC,WAAK,CAACgC,IAAN,CAAW,uCAAX,EACGC,IADH,CACSC,QAAD,IAAc;AAClB,aAAK3B,cAAL,GAAsB2B,QAAQ,CAAC9B,IAA/B;AACD,OAHH,EAIG+B,KAJH,CAIUC,KAAD,IAAW;AAChBZ,eAAO,CAACC,GAAR,CAAYW,KAAZ;AACD,OANH;AAOD;;AA1BM,GAnDI;;AAgFbE,SAAO,GAAG;AACR,SAAKD,OAAL;AACD;;AAlFY,CAAf","names":["Swiper","SwiperSlide","Datepicker","ActivityCard","axios","require","default","components","data","searchOrder","searchType","actInformation","page","userInput","userPage","minNum","maxNum","computed","totalActivityNum","length","numOfPages","temp","Math","floor","res","shownActivity","i","push","console","log","methods","switchTo","path","$router","replace","searchActivity","post","then","response","catch","error","askInfo","mounted"],"sourceRoot":"","sources":["C:\\Users\\22414\\Desktop\\App\\CSC4001APP\\client\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <table class=\"showTable\" cellspacing=\"0\" cellpadding=\"0\" align=\"center\">\n      <tr height=\"100px\"> <!--first row-->\n        <td id=\"swip\" align=\"center\" colspan=\"3\" border=\"1\">\n          <swiper options=\"swiperOption\" class = 'swiper-box'>\n            <swiper-slide height=\"50\" align=\"center\">\n              <div >content</div>\n            </swiper-slide>\n          </swiper>\n        </td>\n        <td id=\"create\" align=\"center\">\n          <button id = \"createNew\" @click=\"switchTo('/activityCreation')\">\n          + Post a new event</button>\n        </td>\n      </tr>\n      <tr height=\"50\"> <!--second row-->\n        <td align=\"center\" width=\"30%\"> <!--search bar-->\n          <select v-model=\"searchType\">\n            <option value=\"type\">type</option>\n            <option value=\"title\">title</option>\n          </select>\n          <input v-model=\"userInput\">\n          <button @click=\"searchActivity\">search</button>\n        </td>\n        <td align=\"center\" width=\"20%\"> <!--order bar-->\n          <div class=\"rightSep\" id=\"order-select\">\n            <select v-model=\"searchOrder\">\n            <option disabled value=\"\">Please select one</option>\n            <option>Most Recent</option>\n            <option>Almost Full</option>\n            <option>Most Popular</option>\n          </select>\n          <button>Sort</button>\n          </div>\n        </td>\n        <td align=\"center\" width=\"20%\"> <!--date bar-->\n          <div class=\"rightSep\">\n            <datepicker>\n            </datepicker>\n          </div>\n        </td>\n        <td align=\"center\" width=\"30%\"> <!--number bar-->\n          <span>number of members </span>\n          <input v-model=\"minNum\" style=\"width:25px; height:25px\">\n          <span> - </span>\n          <input v-model=\"maxNum\" style=\"width:25px; height:25px\">\n        </td>\n      </tr>\n    </table>\n\n    <div class=\"actSquare\">\n      <dl>\n        <dt v-for=\"(act, index) in actInformation.splice(page*12,page*12+12)\" :key=\"index\">\n          <activity-card :time=\"act.time\" :title=\"act.title\" :description=\"act.description\">\n          </activity-card>\n        </dt>\n      </dl>\n      <div class=\"pageList\">\n        <button @click=\"page -= 1\" :disabled=\"page == 0\">previous</button>\n        <span style=\"margin-left:10px; margin-right:10px\"> {{page + 1}} </span>\n        <button @click=\"page += 1\" :disabled=\"page == numOfPages-1\">next</button>\n        <span> go to: </span>\n        <select v-model=\"userPage\">\n          <option v-for=\"p in numOfPages\" :key=\"p\" @click=\"page=p-1\">{{p}}</option>\n        </select>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Swiper, SwiperSlide } from 'vue-awesome-swiper';\nimport Datepicker from 'vuejs3-datepicker';\nimport ActivityCard from '../components/Home/ActivityCard.vue';\n\nconst axios = require('axios').default;\n\nexport default {\n  components: {\n    Swiper,\n    SwiperSlide,\n    Datepicker,\n    'activity-card': ActivityCard,\n  },\n\n  data() {\n    return {\n      searchOrder: '',\n      searchType: 'type',\n      actInformation: [], // store the activity information\n      page: 0, // store the page number\n      userInput: '', // store the user's input for searching\n      userPage: null, // the page number user want to view\n      minNum: null,\n      maxNum: null,\n    };\n  },\n\n  computed: {\n    totalActivityNum() {\n      return this.actInformation.length;\n    },\n\n    numOfPages() {\n      const temp = Math.floor(this.totalActivityNum / 12);\n      const res = this.totalActivityNum % 12;\n      if (res === 0) {\n        return temp;\n      }\n      return temp + 1;\n    },\n\n    shownActivity() {\n      const res = [];\n      if (this.page * 12 + 12 > this.actInformation.length) {\n        for (let i = this.page * 12; i < this.actInformation.length; i += 1) {\n          res.push(this.actInformation[i]);\n        }\n      } else {\n        for (let i = 0; i < 12; i += 1) {\n          res.push(this.actInformation[this.page * 12 + i]);\n        }\n      }\n      console.log(res);\n      return res;\n    },\n  },\n\n  methods: {\n    switchTo(path) {\n      this.$router.replace(path);\n    },\n\n    searchActivity() {\n      axios.post(\n        'http://localhost:4000/searchActivity',\n        { searchType: this.searchType, userInput: this.userInput },\n      )\n        .then((response) => {\n          this.actInformation = response.data;\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n\n    askInfo() {\n      axios.post('http://localhost:4000/getActivityInfo')\n        .then((response) => {\n          this.actInformation = response.data;\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n  },\n\n  mounted() {\n    this.askInfo();\n  },\n\n};\n</script>\n\n<style>\n#swip {\n  border-style: solid; border-width: 0px 1px 1px 0px;\n}\n\n#create {\n  border-style: solid; border-width: 0px 0px 1px 0px;\n}\n\n#createNew {\n  text-align:center;\n  background-color: white;\n  border-radius: 10px;\n  height:45px; width: 200px;\n}\n\n.rightSep{\n  margin: 5px;\n  border-style: solid; border-width: 0px 1px 0px 0px;\n}\n\n.showTable{\n  width: 100%;\n  border-style: solid; border-width: 1px 0px 1px 0px; border-color: black;\n}\n\n.actSquare{\n  padding-left: 4%; padding-right: 4%; padding-top: 1%;\n  align-content: center;\n}\n\n.pageList{\n  position: fixed; bottom: 0%;\n  width: 100%; height: 5%;\n  background-color: white;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}