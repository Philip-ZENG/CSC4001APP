{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"about\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"This is the Login page\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  class: \"userInput\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Email Address\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Password\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = {\n  class: \"loginStatus\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Login Status is \", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.userAccount = $event),\n    placeholder: \"Email\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.userAccount]]), _hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    placeholder: \"Password\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.password]]), _hoisted_5, _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.accountVerification && $options.accountVerification(...args))\n  }, \"Login\")]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"h1\", null, _toDisplayString($data.loginStatus), 1\n  /* TEXT */\n  )])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCACEA,oBAEM,KAFN,EAEM;AAFDC,OAAK,EAAC;AAEL,CAFN,EAAkB,cAChBD,oBAA+B,IAA/B,EAA+B,IAA/B,EAAI,wBAAJ,CADgB,CAAlB;;AAAA;;;AAIKC,OAAK,EAAC;;;gCACTD,oBAAoB,GAApB,EAAoB,IAApB,EAAG,eAAH,EAAgB;AAAA;AAAhB;;gCAEAA,oBAAe,GAAf,EAAe,IAAf,EAAG,UAAH,EAAW;AAAA;AAAX;;gCAEAA,oBAAO,GAAP,EAAO,IAAP,EAAO,IAAP,EAAO;AAAA;AAAP;;;AAIGC,OAAK,EAAC;;;gCACTD,oBAAuB,GAAvB,EAAuB,IAAvB,EAAG,kBAAH,EAAmB;AAAA;AAAnB;;;6DAdFE,YAIAF,oBAOM,KAPN,cAOM,CANJG,UAMI,kBALJH,oBAAmD,OAAnD,EAAmD;+DAAnCI,oBAAWC,OAAwB;AAAtBC,eAAW,EAAC;AAAU,GAAnD;;AAAA,oBAAgBF,oBAKZ,EAJJG,UAII,kBAHJP,oBAAmD,OAAnD,EAAmD;+DAAnCI,iBAAQC,OAA2B;AAAzBC,eAAW,EAAC;AAAa,GAAnD;;AAAA,oBAAgBF,iBAGZ,EAFJI,UAEI,EADJR,oBAAuD,QAAvD,EAAuD;AAA1CS,WAAK,yCAAEC,qEAAF;AAAqC,GAAvD,EAAyC,OAAzC,CACI,CAPN,GASAV,oBAGM,KAHN,cAGM,CAFJW,UAEI,EADJX,oBAA0B,IAA1B,EAA0B,IAA1B,EAA0BY,iBAAnBR,iBAAmB,CAA1B,EAAkB;AAAA;AAAlB,GACI,CAHN","names":["_createElementVNode","class","_hoisted_1","_hoisted_3","$data","$event","placeholder","_hoisted_4","_hoisted_5","onClick","$options","_hoisted_7","_toDisplayString"],"sourceRoot":"","sources":["C:\\Users\\22414\\Desktop\\App\\CSC4001APP\\client\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"about\">\n    <h1>This is the Login page</h1>\n  </div>\n\n  <div class=\"userInput\">\n    <p>Email Address</p>\n    <input v-model=\"userAccount\" placeholder=\"Email\" />\n    <p>Password</p>\n    <input v-model=\"password\" placeholder=\"Password\" />\n    <p></p>\n    <button v-on:click=\"accountVerification\">Login</button>\n  </div>\n\n  <div class=\"loginStatus\">\n    <p>Login Status is </p>\n    <h1>{{ loginStatus }}</h1>\n  </div>\n</template>\n\n<script>\nconst axios = require('axios').default;\n\nconst LOGIN_URL = 'http://localhost:4000/login';\n\nexport default {\n  name: 'LoginView',\n  data() {\n    return {\n      userAccount: null,\n      password: null,\n      loginStatus: false,\n    };\n  },\n  methods: {\n    accountVerification() {\n      const account = this.userAccount;\n      const keyword = this.password;\n      axios.post(LOGIN_URL, { userAccount: account, password: keyword });\n      axios.get(LOGIN_URL).then((results) => {\n        this.loginStatus = results.data.verificationResult;\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}