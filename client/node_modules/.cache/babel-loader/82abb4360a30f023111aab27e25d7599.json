{"ast":null,"code":"export default {\n  props: {\n    user_id: {\n      type: Number,\n      required: true\n    },\n    user_name: {\n      type: String,\n      required: true\n    },\n    user_email: {\n      type: String,\n      required: true\n    }\n  },\n  methods: {\n    toUserManagement() {\n      this.$store.dispatch('/userManagement/setUserId', {\n        user_id: this.user_id\n      });\n      console.log('user_id is', this.$store.getters['/userManagement/getUserId']);\n      this.$router.push('/userManagement');\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA0BA,eAAe;AACbA,OAAK,EAAE;AACLC,WAAO,EAAE;AAAEC,UAAI,EAAEC,MAAR;AAAgBC,cAAQ,EAAE;AAA1B,KADJ;AAELC,aAAS,EAAE;AAAEH,UAAI,EAAEI,MAAR;AAAgBF,cAAQ,EAAE;AAA1B,KAFN;AAGLG,cAAU,EAAE;AAAEL,UAAI,EAAEI,MAAR;AAAgBF,cAAQ,EAAE;AAA1B;AAHP,GADM;AAMbI,SAAO,EAAE;AACPC,oBAAgB,GAAG;AACjB,WAAKC,MAAL,CAAYC,QAAZ,CAAqB,2BAArB,EAAkD;AAAEV,eAAO,EAAE,KAAKA;AAAhB,OAAlD;AACAW,aAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKH,MAAL,CAAYI,OAAZ,CAAoB,2BAApB,CAA1B;AACA,WAAKC,OAAL,CAAaC,IAAb,CAAkB,iBAAlB;AACD;;AALM;AANI,CAAf","names":["props","user_id","type","Number","required","user_name","String","user_email","methods","toUserManagement","$store","dispatch","console","log","getters","$router","push"],"sourceRoot":"","sources":["D:\\MySQL\\pickup\\client\\src\\components\\AdminConsole\\UserListCard.vue"],"sourcesContent":["<template>\n  <div class=\"card mt-2\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <h5>{{ user_id }}</h5>\n      </div>\n      <div class=\"col\">\n        <h5>{{ user_name }}</h5>\n      </div>\n      <div class=\"col\">\n        <h5>{{ user_email }}</h5>\n      </div>\n      <div class=\"col\">\n        <button\n          class=\"btn btn-primary\"\n          type=\"button\"\n          @click=\"toUserManagement\"\n        >\n          Manage\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    user_id: { type: Number, required: true },\n    user_name: { type: String, required: true },\n    user_email: { type: String, required: true },\n  },\n  methods: {\n    toUserManagement() {\n      this.$store.dispatch('/userManagement/setUserId', { user_id: this.user_id });\n      console.log('user_id is', this.$store.getters['/userManagement/getUserId']);\n      this.$router.push('/userManagement');\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}